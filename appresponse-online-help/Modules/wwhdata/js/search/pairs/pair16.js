function FileData_Pairs(x)
{
x.t("interfaces","example");
x.t("interfaces","enabling");
x.t("interfaces","appresponse");
x.t("interfaces","ingress");
x.t("interfaces","tos");
x.t("interfaces","egress");
x.t("interfaces","collect");
x.t("interfaces","interest");
x.t("interfaces","read-only");
x.t("interfaces","per");
x.t("interfaces","consume");
x.t("example","collecting");
x.t("shortest","interval");
x.t("in_pkts","include");
x.t("enabling","snmp");
x.t("reported","tos");
x.t("combinations","qos");
x.t("version","netflow");
x.t("flow_sampler_random_interval","last_switched");
x.t("applied","ingress");
x.t("appresponse","appliance");
x.t("appresponse","determine");
x.t("appresponse","inaccurate");
x.t("appresponse","disable");
x.t("table","shows");
x.t("table","netflow");
x.t("appliance","default");
x.t("appliance","configured");
x.t("appliance","unnecessarily");
x.t("appliance","process");
x.t("various","combinations");
x.t("v1/v2c","access");
x.t("required","netflow");
x.t("home","back");
x.t("objectives","collect");
x.t("regular","netflow");
x.t("u.s","patents");
x.t("ingress","direction");
x.t("ingress","egress");
x.t("enabled","specific");
x.t("enabled","export");
x.t("enabled","note");
x.t("enabled","netflow");
x.t("qos","enable");
x.t("qos","sampling");
x.t("pair","fields");
x.t("shows","enable");
x.t("interface","enabling");
x.t("interface","(s)");
x.t("interface","names");
x.t("nefflow","combination");
x.t("nefflow","directions");
x.t("notices","section");
x.t("sample","option");
x.t("sample","data");
x.t("change","netflow");
x.t("multiple","interfaces");
x.t("out_pkts","in_bytes");
x.t("default","appliance");
x.t("back","top");
x.t("link","collecting");
x.t("access","desirable");
x.t("desirable","interface");
x.t("top","2014");
x.t("groups/drilldowns","option");
x.t("complete","patent");
x.t("network","devices");
x.t("timeouts","300");
x.t("timeouts","seconds");
x.t("first_switched","direction");
x.t("first_switched","src_tos");
x.t("tos","results");
x.t("tos","values");
x.t("results","appresponse");
x.t("configuring","netflow");
x.t("traffic","multiple");
x.t("traffic","ends");
x.t("traffic","collect");
x.t("recommended","required");
x.t("desired","out_bytes");
x.t("in_bytes","in_pkts");
x.t("in_bytes","in_bytes");
x.t("in_bytes","last_switched");
x.t("direction","interfaces");
x.t("direction","enable");
x.t("direction","configure");
x.t("direction","flow_sampler_id");
x.t("ends","link");
x.t("follows","devices");
x.t("sampled","nefflow");
x.t("avoid","excessive");
x.t("avoid","collecting");
x.t("listen","port");
x.t("preference","described");
x.t("egress","interfaces");
x.t("egress","interface");
x.t("egress","traffic");
x.t("egress","direction");
x.t("egress","directions");
x.t("determine","whether");
x.t("last_switched","first_switched");
x.t("web","following");
x.t("300","seconds");
x.t("fields","desired");
x.t("fields","out_bytes");
x.t("device","interfaces");
x.t("device","home");
x.t("device","send");
x.t("device","data");
x.t("ports","change");
x.t("patent","notice");
x.t("selected","interfaces");
x.t("legal","notices");
x.t("collect","traffic");
x.t("collect","two");
x.t("collect","merge");
x.t("collect","relevant");
x.t("supported","device");
x.t("address/udp","port");
x.t("configured","listen");
x.t("notice","legal");
x.t("excessive","processing");
x.t("loads","configuration");
x.t("collection","options");
x.t("collection","collecting");
x.t("select","interfaces");
x.t("options","administration");
x.t("options","netflow");
x.t("unnecessarily","appliance");
x.t("processing","loads");
x.t("reporting","ingress");
x.t("enough","information");
x.t("templates","timeouts");
x.t("templates","specify");
x.t("whether","reported");
x.t("combination","ingress");
x.t("2014","riverbed");
x.t("software","may");
x.t("may","covered");
x.t("correction","table");
x.t("redundant","data");
x.t("section","riverbed");
x.t("interest","avoid");
x.t("enable","sampled");
x.t("enable","netflow");
x.t("1-minute","intervals");
x.t("option","enabled");
x.t("option","templates");
x.t("sampling","enabled");
x.t("sampling","qos");
x.t("sampling","correction");
x.t("sampling","enable");
x.t("less","specify");
x.t("include","pair");
x.t("include","enough");
x.t("include","following");
x.t("configuration","regular");
x.t("configuration","options");
x.t("configuration","snmp");
x.t("configuration","directions");
x.t("technology","software");
x.t("interval","supported");
x.t("src_tos","dst_tos");
x.t("send","netflow");
x.t("specific","interfaces");
x.t("process","netflow");
x.t("generate","data");
x.t("(s)","groups/drilldowns");
x.t("(s)","preference");
x.t("data","multiple");
x.t("data","configuring");
x.t("data","traffic");
x.t("data","address/udp");
x.t("data","collection");
x.t("data","templates");
x.t("data","1-minute");
x.t("data","include");
x.t("data","configure");
x.t("data","monitoring");
x.t("data","devices");
x.t("configure","network");
x.t("configure","device");
x.t("information","appresponse");
x.t("monitoring","interface");
x.t("inactive","flows");
x.t("read-only","v1/v2c");
x.t("inaccurate","netflow");
x.t("collecting","ingress");
x.t("collecting","redundant");
x.t("collecting","data");
x.t("collecting","netflow");
x.t("intervals","less");
x.t("intervals","inactive");
x.t("values","applied");
x.t("disable","collect");
x.t("port","appliance");
x.t("port","(s)");
x.t("port","9996");
x.t("described","netflow");
x.t("two","objectives");
x.t("export","sample");
x.t("out_bytes","out_pkts");
x.t("administration","system");
x.t("snmp","recommended");
x.t("snmp","configuration");
x.t("note","avoid");
x.t("netflow","version");
x.t("netflow","qos");
x.t("netflow","ingress");
x.t("netflow","network");
x.t("netflow","reporting");
x.t("netflow","sampling");
x.t("netflow","configuration");
x.t("netflow","include");
x.t("netflow","data");
x.t("netflow","port");
x.t("netflow","directions");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("merge","data");
x.t("relevant","netflow");
x.t("following","table");
x.t("following","fields");
x.t("9996","specify");
x.t("system","web");
x.t("per","device");
x.t("dst_tos","direction");
x.t("directions","appresponse");
x.t("directions","enabled");
x.t("directions","selected");
x.t("names","required");
x.t("covered","u.s");
x.t("consume","resources");
x.t("devices","interfaces");
x.t("devices","various");
x.t("devices","configuring");
x.t("devices","follows");
x.t("devices","select");
x.t("devices","generate");
x.t("devices","netflow");
x.t("resources","appresponse");
x.t("flows","specify");
x.t("specify","sample");
x.t("specify","timeouts");
x.t("specify","ports");
x.t("seconds","shortest");
x.t("seconds","sampling");
x.t("seconds","netflow");
x.t("flow_sampler_id","flow_sampler_random_interval");
x.t("patents","complete");
}
