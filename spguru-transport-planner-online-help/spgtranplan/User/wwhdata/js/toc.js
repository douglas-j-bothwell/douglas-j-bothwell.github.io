function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("SP Guru Transport Planner","0");
A=P.fN("Overview","1");
var B=A.fN("Product Features","2");
B=A.fN("The SP Guru Transport Planner Workflow","3");
B=A.fN("Creating Baseline Information","4");
var C=B.fN("Creating a Network Topology","5");
var D=C.fN("Layered Network Design","5#wp91965");
D=C.fN("Creating a Topology","5#wp39214");
C=B.fN("Creating Traffic Matrices","6");
C=B.fN("Network Properties","7");
C=B.fN("Cost Parameters","8");
C=B.fN("Importing Network Data","9");
C=B.fN("References: Getting Started","10");
B=A.fN("Designing Your Network","11");
C=B.fN("Topology Design","12");
D=C.fN("Link Design","12#wp96711");
D=C.fN("Route and Equip Fibers","12#wp45426");
D=C.fN("Creating DCL Rings","12#wp96732");
C=B.fN("Setting Up Traffic","13");
D=C.fN("Dimensioning","13#wp96831");
D=C.fN("Routing","13#wp38833");
D=C.fN("Manual Routing","13#wp45803");
D=C.fN("Constraint-Based Routing","13#wp97889");
D=C.fN("Grooming","13#wp93274");
D=C.fN("SONET/SDH Ring Design","13#wp38855");
D=C.fN("Traffic Variations","13#wp45911");
D=C.fN("Batch Console","13#wp88879");
C=B.fN("References: Design Operations","14");
B=A.fN("Evaluating your Network","15");
C=B.fN("Browsers","15#wp43976");
C=B.fN("Bill of Materials","15#wp39050");
C=B.fN("Equipment/Line Failures and Availability","15#wp39141");
C=B.fN("Failure Analysis","15#wp39052");
C=B.fN("Comparing Scenarios","15#wp45522");
C=B.fN("Text or Spreadsheet Reports","15#wp46006");
C=B.fN("Other Reporting Features","15#wp100404");
C=B.fN("References: Viewing Network Information","16");
B=A.fN("Hardware Configurator","17");
A=P.fN("Concepts and Models","18");
B=A.fN("SONET/SDH and Optical Technology","19");
C=B.fN("SONET/SDH Systems","20");
C=B.fN("WDM Systems","21");
B=A.fN("SONET and WDM Representation in SP Guru Transport Planner","22");
C=B.fN("Layers in SP Guru Transport Planner","22#wp115729");
C=B.fN("Optical Nodes vs. SONET/SDH Nodes","23");
C=B.fN("OCH vs. DCL Links","24");
B=A.fN("Optical Transparency","25");
C=B.fN("Opaque Mode","25#wp44878");
C=B.fN("Transparent Mode","25#wp44967");
B=A.fN("Protection Methods in Meshed Networks","26");
C=B.fN("1 + 1 Path Protection","27");
C=B.fN("Shared Path Protection","28");
C=B.fN("Link Restoration","29");
C=B.fN("Path Restoration","30");
B=A.fN("Protection Methods in Ring Networks","31");
C=B.fN("Unidirectional Path Switched Ring (UPSR)","31#wp80803");
C=B.fN("Bidirectional Line Switched Ring (BLSR)","31#wp45294");
B=A.fN("Node Modeling Capabilities in SP Guru Transport Planner","32");
C=B.fN("SONET Nodes: DXC","33");
D=C.fN("Minimum and Maximum Bit Rates for Tributary and Trunk Ports","33#wp45356");
D=C.fN("Protection Options","33#wp47999");
C=B.fN("SONET Nodes: TM","34");
C=B.fN("SONET Nodes: ADM","35");
C=B.fN("Optical Nodes: Non-Blocking OXC","36");
D=C.fN("Patch Panel","36#wp119212");
D=C.fN("Protection Options","36#wp119226");
C=B.fN("Optical Nodes: WP-OXC","37");
D=C.fN("WP-OXC Architectures","37#wp118477");
C=B.fN("Optical Nodes: OADM","38");
D=C.fN("Complete OADM Node","38#wp118524");
D=C.fN("Selective OADMs Between Two Fiber Pairs","38#wp118539");
C=B.fN("SONET/ Optical Nodes: DXC + OXC","39");
D=C.fN("Native Traffic","39#wp45797");
D=C.fN("Protection Options","39#wp45892");
D=C.fN("Grooming","39#wp45929");
D=C.fN("SONET/SDH Rings","39#wp48059");
C=B.fN("Integrated SONET/Optical Nodes: IXC","40");
D=C.fN("Minimum and Maximum Bit Rates for Tributary and Trunk Ports","40#wp46036");
D=C.fN("Native Traffic","40#wp46230");
D=C.fN("Protection Options","40#wp46305");
D=C.fN("ADMs and IXC","40#wp48072");
A=P.fN("Creating a Baseline Scenario","41");
B=A.fN("Editor Windows","42");
C=B.fN("Main SP Guru Transport Planner Window","42#wp240132");
C=B.fN("Project Editor","42#wp240158");
D=C.fN("Saving Projects","42#wp240193");
C=B.fN("Network Layers","43");
B=A.fN("Creating a New Project or Scenario","44");
B=A.fN("Defining a Network Topology","45");
C=B.fN("The Object Palette","45#wp137599");
C=B.fN("Creating Nodes","45#wp137659");
C=B.fN("Creating Links","45#wp137715");
C=B.fN("Deleting, Cutting, Copying and Pasting Nodes and Links","45#wp306615");
C=B.fN("Cutting and Deleting","45#wp306618");
C=B.fN("Creating Custom Network Documentation","45#wp325860");
C=B.fN("Node Model Icons","45#wp276507");
B=A.fN("Configuring Cable Splitters and Fiber Routes","46");
C=B.fN("Cable Splitter","47");
C=B.fN("Fiber Routing","48");
B=A.fN("Network Properties","49");
C=B.fN("The OCH Layer Mode","50");
D=C.fN("Transparent Options","50#wp140773");
C=B.fN("The Node Model","51");
C=B.fN("Default Values for Line System and Bit Rate","52");
C=B.fN("TDM Nomenclature","53");
C=B.fN("Distance Units","54");
B=A.fN("Creating Network Traffic","55");
C=B.fN("Creating Custom Bit Rates","56");
C=B.fN("Creating a Traffic Matrix","57");
B=A.fN("Equipment Properties","58");
C=B.fN("SONET/SDH Mesh Equipment Properties","59");
C=B.fN("SONET/SDH Ring Equipment","60");
C=B.fN("WDM Link Equipment Properties","61");
D=C.fN("Other Link Equipment Options","61#wp205936");
C=B.fN("WDM Node Equipment Properties","62");
D=C.fN("Specifying Patch Panel Properties","62#wp206806");
C=B.fN("Generic Link Costs","63");
B=A.fN("Delay Settings","64");
B=A.fN("Availability Settings","65");
C=B.fN("Link Availability Properties","66");
C=B.fN("Line System Availability Properties","67");
C=B.fN("Node Availability","68");
B=A.fN("Configuring Individual Objects","69");
B=A.fN("Link Design","70");
C=B.fN("Link Design Dialog Box","71");
C=B.fN("Recalculating Link Lengths","72");
A=P.fN("Viewing and Configuring Objects","73");
B=A.fN("Exporting Browser Information to CSV Files","74");
B=A.fN("Link Browser","75");
C=B.fN("OTS Link Browser","76");
C=B.fN("OMS Link Browser","77");
C=B.fN("OCH Link Browser","78");
D=C.fN("Adding/Removing OCH Capacity","78#wp292077");
D=C.fN("Wavelength Filtering","78#wp274384");
C=B.fN("DCL Link Browser","79");
B=A.fN("Node Browser","80");
C=B.fN("OTS Node Browser","81");
C=B.fN("OMS Node Browser","82");
C=B.fN("OCH Node Browser","83");
D=C.fN("Viewing OADM Trunk Capacity","83#wp278184");
D=C.fN("Viewing WP-OXC Ports","83#wp269079");
D=C.fN("Setting Allowed XC Types","83#wp297426");
C=B.fN("DCL Node Browser","84");
B=A.fN("Connection Browser","85");
C=B.fN("Viewing Paths Using the Connection Browser","86");
B=A.fN("Ring Browser","87");
C=B.fN("Ring Usage Types","87#wp282775");
C=B.fN("Setting Ring Design Options","87#wp282334");
A=P.fN("Importing and Exporting Data","88");
B=A.fN("Import Procedure","89");
B=A.fN("Export Procedure","90");
B=A.fN("Data File Formats","91");
C=B.fN("Node Locations Data Files","92");
C=B.fN("Node Settings Data Files","93");
C=B.fN("Link User Costs Data Files","94");
C=B.fN("OTS Link Data Files","95");
C=B.fN("Optical Amplifier and Regenerator Locations Data Files","96");
C=B.fN("OADM Data Files","97");
C=B.fN("Equipped Fiber Pairs Data Files","98");
C=B.fN("Cable Splitter Configuration Data Files","99");
C=B.fN("Traffic Matrix Data Files","100");
C=B.fN("Fiber Route Data Files","101");
C=B.fN("Wavelengths Tables Data Files","102");
C=B.fN("Connection List Data Files","103");
D=C.fN("Specifying Links Using Modifiers","103#wp257299");
D=C.fN("Specifying Routing Behavior Using Keywords","103#wp257661");
D=C.fN("Specifying Service Identifiers","103#wp267076");
C=B.fN("SONET/SDH Ring Data Files","104");
C=B.fN("Topology Constraints Data Files","105");
D=C.fN("Topology Constraints Files: Additional Requirements","105#wp262486");
C=B.fN("Link Designations Data Files","106");
C=B.fN("Link Subdesignations Data Files","107");
C=B.fN("Link Usage Thresholds Data File","108");
B=A.fN("Importing and Exporting User Data Settings","109");
C=B.fN("Loading and Saving User Default Settings","109#wp257992");
B=A.fN("Importing and Exporting WDMNetDesign Files","110");
B=A.fN("Importing and Exporting Route Data Files","111");
C=B.fN("Unprotected Routes","111#wp252240");
C=B.fN("Protected Routes","111#wp252252");
A=P.fN("Routing","112");
B=A.fN("Route DCL/OCH Traffic Dialog Box","113");
C=B.fN("Routing Protection","114");
D=C.fN("Protection Options","114#wp255512");
D=C.fN("Link Disjointness for Working and Protection Paths","114#wp280440");
C=B.fN("Routing Algorithm","115");
D=C.fN("Connection Order","115#wp253436");
D=C.fN("Diverse Routing Algorithm","115#wp274939");
D=C.fN("Routing Optimization","115#wp307368");
C=B.fN("Node Model Options","116");
C=B.fN("Routing Cost","117");
D=C.fN("Detailed Routing Cost Options","117#wp300168");
B=A.fN("Routing Results","118");
C=B.fN("Splitting Unrouted Connections into a Residual Traffic Matrix","119");
B=A.fN("Pinning and Unpinning Connections","120");
B=A.fN("Tearing Down a Traffic Matrix","121");
B=A.fN("Traffic Variations","122");
B=A.fN("Manual Routing","123");
B=A.fN("Constraint-Based Routing","124");
B=A.fN("Topological Routing Constraints","125");
B=A.fN("Link Usage Threshold","126");
B=A.fN("Service Identifiers","127");
C=B.fN("Specifying Service Identifiers","128");
C=B.fN("Applying Service Identifiers to Connections","129");
C=B.fN("Routing Traffic with Service Identifiers","130");
A=P.fN("Dimensioning","131");
B=A.fN("Dimensioning a Topology","");
C=B.fN("Dimensioning a Topology","131#wp111706");
B=A.fN("Dimension DCL/OCH Layer Dialog Box","132");
C=B.fN("Protection Strategies","133");
D=C.fN("Unprotected Dimensioning","133#wp53182");
D=C.fN("Protected Dimensioning","133#wp53191");
D=C.fN("Link and Path Restoration","133#wp56187");
C=B.fN("Routing Cost","134");
C=B.fN("Dimensioning Algorithms","135");
D=C.fN("Shortest-Path Dimensioning","135#wp53207");
D=C.fN("Heuristic Dimensioning","135#wp53209");
D=C.fN("Diverse-Route Dimensioning","135#wp54851");
C=B.fN("Link Expansion","136");
C=B.fN("Dimensioning Transparent Networks","137");
C=B.fN("OADM Dimensioning","138");
B=A.fN("Strip Capacity","139");
A=P.fN("Grooming DCL to OCH Traffic","140");
B=A.fN("Workflow Description","");
C=B.fN("Workflow Description","140#wp124871");
C=B.fN("Undoing a DCL Grooming Operation","141");
B=A.fN("Grooming DCL Traffic with Optimized Routes","142");
C=B.fN("DCL Grooming Input and Options","143");
D=C.fN("Import Candidate Node Pairs","143#wp146430");
D=C.fN("Apply Service Identifiers","143#wp146864");
D=C.fN("Split Off Ungroomable","143#wp146871");
C=B.fN("DCL Grooming Actions","144");
C=B.fN("DCL Grooming Results and Performance","145");
B=A.fN("Grooming DCL Traffic with Fixed Routes","146");
B=A.fN("Cost Parameters That Affect DCL Grooming Results","147");
C=B.fN("Calculating a DCL Link's Total Cost","148");
B=A.fN("DCL Grooming Solutions Without Protection","149");
C=B.fN("Solution 1: Pure End-to-End (No Intermediate Grooming)","150");
C=B.fN("Pure Link-by-Link (Full Intermediate Grooming)","151");
C=B.fN("Solutions 1 and 2 Compared","152");
B=A.fN("DCL Grooming Solutions with Protection","153");
C=B.fN("Solution 3: Pure End-to-End (No Intermediate Grooming)","154");
C=B.fN("Solution 4: Pure Link-by-Link (Full Intermediate Grooming)","155");
C=B.fN("Solutions 3 and 4 Compared","156");
B=A.fN("Optimization Algorithms: Descriptions","157");
C=B.fN("End-to-End (ETE) Optimization Algorithm","158");
D=C.fN("Algorithm Description","158#wp56986");
C=B.fN("Link-by-Link (LBL) Optimization Algorithm","159");
D=C.fN("Algorithm Description","159#wp58818");
C=B.fN("ETE vs. LBL Grooming","160");
D=C.fN("Which Solution Should You Use?","160#wp53731");
B=A.fN("Grooming Multiple DCL Matrices","161");
C=B.fN("Grooming Simultaneously","162");
C=B.fN("Grooming Sequentially","163");
D=C.fN("Example: Groom Without Reuse","163#wp58544");
D=C.fN("Example: Groom With Reuse","163#wp53996");
B=A.fN("DCL Grooming and Two-Tier Network Design","164");
C=B.fN("No New Electrical DCL Links","165");
C=B.fN("Non-Grooming DCL Nodes","166");
C=B.fN("No Grooming Without Reuse","167");
C=B.fN("OCC Nodes","168");
A=P.fN("Grooming LOP to DCL Traffic","169");
B=A.fN("Workflow Description","170");
B=A.fN("Groom LOP to DCL Traffic Dialog Box","171");
C=B.fN("LOP Grooming: Input","172");
C=B.fN("LOP Grooming: Action Buttons","173");
C=B.fN("Use Existing Capacity/Add New Capacity Settings: Effects","174");
B=A.fN("LOP End-to-End Grooming Algorithm","175");
C=B.fN("LOP End-to-End Grooming: Example","176");
B=A.fN("Visualizing LOP Connections in the Connections Browser","177");
A=P.fN("Transparent Networks","178");
B=A.fN("Transparent Network Concepts","179");
C=B.fN("Selective Regeneration (SR)","179#wp290664");
C=B.fN("Wavelength Conversion (WC)","179#wp290666");
C=B.fN("Transparent Network Node Types","180");
D=C.fN("Transparent Node","180#wp291395");
D=C.fN("Transparent Node with Selective Regeneration","180#wp291340");
D=C.fN("Opaque Node","180#wp291345");
D=C.fN("Tunable and Fixed-Wavelength Transponders","180#wp291349");
B=A.fN("Algorithm Descriptions","181");
C=B.fN("Selective Regeneration","182");
C=B.fN("Routing Algorithm","183");
B=A.fN("Workflow Description: Transparent Network Routing or Dimensioning","184");
C=B.fN("Preparing a Transparent Network","185");
C=B.fN("Defining OADMs Manually","186");
C=B.fN("Transparent Network Routing Procedure","187");
C=B.fN("Routing / Dimensioning Results for Transparent Networks","188");
B=A.fN("Transparent Routing Options Dialog Box","189");
C=B.fN("Maximum Transparency Length","190");
C=B.fN("Cost Parameters","191");
C=B.fN("Wavelength Assignment Options","192");
C=B.fN("Dimension Link Capacity","193");
C=B.fN("Wavelength-Plane OXC Options","194");
A=P.fN("Optical Express Layer","195");
B=A.fN("Workflow Description","196");
B=A.fN("Select Gateway Nodes Dialog Box","197");
C=B.fN("Calculate Gateway Nodes Set Dialog Box","198");
B=A.fN("Select Express Links Dialog Box","199");
C=B.fN("Calculate Express Link Set Dialog Box","200");
B=A.fN("Implement Express Links Dialog Box","201");
B=A.fN("Viewing the Express Layer","202");
A=P.fN("Ring Design","203");
B=A.fN("Pre-Design Steps","204");
B=A.fN("Creating Rings","205");
B=A.fN("Ring Browser","206");
B=A.fN("Ring Dimensioning","207");
C=B.fN("Dimension DCL Rings Dialog Box","208");
C=B.fN("Advanced Options\u2014Ring/Mesh Cost Dialog Box","209");
C=B.fN("Hybrid Ring-Mesh Design","210");
B=A.fN("Ring Identification","211");
C=B.fN("Workflow Description","212");
D=C.fN("Ring Identification, Step 1: Select Traffic Matrices","212#wp304325");
D=C.fN("Ring Identification, Step 2: Select Candidate Rings and Routing Metrics","212#wp304368");
D=C.fN("Ring Identification, Step 3: Inspect Ring Costs and Install Candidate Rings","212#wp304631");
B=A.fN("Evaluating Results","213");
C=B.fN("Viewing Ring Details in the Ring Browser","214");
C=B.fN("Viewing Ring Paths in the Connection Browser","215");
A=P.fN("Hardware Configurator","216");
B=A.fN("Network Design vs. Hardware Design","217");
B=A.fN("Workflow Description","218");
B=A.fN("Hardware File Formats","219");
C=B.fN("Device File Format","220");
D=C.fN("Compound Values","220#wp136322");
C=B.fN("Card File Format","221");
B=A.fN("Importing Hardware","222");
B=A.fN("Managing Hardware","223");
B=A.fN("Configuring Hardware","224");
C=B.fN("Configuration Options","225");
C=B.fN("Interconnection Options Dialog Box","226");
B=A.fN("Hardware Browser","227");
C=B.fN("Summary View","228");
C=B.fN("Nodes View","229");
C=B.fN("Links View","230");
B=A.fN("Viewing the Upgrade History","231");
B=A.fN("Stripping Hardware","232");
C=B.fN("Resetting the Design Run","233");
B=A.fN("Hardware Web Report","234");
A=P.fN("Failure Evaluation","235");
B=A.fN("Service Availability","236");
C=B.fN("Evaluating Service Availability: Workflow Description","236#wp282513");
C=B.fN("Evaluate Availability Dialog Box","237");
C=B.fN("Availability Analysis Report","238");
B=A.fN("Failure Analysis","239");
C=B.fN("Specifying Failures","240");
C=B.fN("Failure Analysis Options","241");
C=B.fN("Evaluating the Impact of Failures on Traffic","242");
D=C.fN("Failure Report","242#wp281503");
B=A.fN("Failure Analysis Report","243");
A=P.fN("Viewing Network Information","244");
B=A.fN("SP Guru Transport Planner Reports Directory","245");
B=A.fN("Topology Information","246");
B=A.fN("OTS Connectivity Information","247");
B=A.fN("Network Cost","248");
B=A.fN("Viewing Node and Link Utilizations","249");
B=A.fN("Wavelength Usage","250");
B=A.fN("Bill of Materials","251");
C=B.fN("Contents of the BOM","252");
C=B.fN("Overview Cost Parameters","253");
C=B.fN("Overview Node Cost","254");
D=C.fN("DXC","254#wp58605");
D=C.fN("ADM","254#wp58419");
C=B.fN("OXC","255");
D=C.fN("OADM","255#wp169083");
D=C.fN("IXC","255#wp116678");
D=C.fN("Patch Panel","255#wp57587");
D=C.fN("Transponders","255#wp57595");
C=B.fN("Overview Link Cost","256");
D=C.fN("WDM Terminal Equipment","256#wp57614");
D=C.fN("In-line Regeneration/Amplification","256#wp57622");
D=C.fN("SDH Equipment","256#wp57630");
C=B.fN("Overview Total Cost","257");
B=A.fN("Connection Resource Details Reports","258");
B=A.fN("Connection Span Details Reports for OCH Connections","259");
B=A.fN("Spreadsheet Reports","260");
C=B.fN("Report Descriptions","261");
C=B.fN("Connection Report","262");
C=B.fN("Cost Report","263");
C=B.fN("Link Report","264");
C=B.fN("Node Report","265");
C=B.fN("Wavelength Usage Report","266");
C=B.fN("Overview Report","267");
C=B.fN("Transparent Routing Report","268");
C=B.fN("Shared Risk Link Group Report","269");
C=B.fN("Restoration Routes Report","270");
C=B.fN("Rings Report","271");
C=B.fN("Cable Splitter Report","272");
C=B.fN("Fiber Routes Report","273");
B=A.fN("Service Identifier Assignments Report","274");
B=A.fN("Diversity Report","275");
A=P.fN("Batch Console","276");
B=A.fN("Workflow Description","277");
B=A.fN("Creating a Source Scenario","278");
B=A.fN("Recording a SP Guru Transport Planner Batch File","279");
C=B.fN("Recording Batch File Dialog Box","280");
B=A.fN("Running a SP Guru Transport Planner Batch File","281");
B=A.fN("Batch Console Dialog Box","282");
B=A.fN("Editing a Batch File Manually","283");
C=B.fN("Actions Supported by Batch Files","");
D=C.fN("Actions Supported by Batch Files","283#wp224402");
C=B.fN("Routing: Batch Options","284");
C=B.fN("Dimensioning: Batch Options","285");
C=B.fN("Grooming: Batch Options","286");
C=B.fN("Ring Design: Batch Options","287");
C=B.fN("Traffic Variations: Batch Options","288");
C=B.fN("Transparent Network Routing: Batch Options","289");
C=B.fN("Evaluate Availability: Batch Options","290");
A=P.fN("Acronym Definitions","291");
A=P.fN("Preferences","292");
B=A.fN("wdmg_send_to_report_server","292#wp930619");
B=A.fN("wdmg_use_SONET","292#wp934762");
}
