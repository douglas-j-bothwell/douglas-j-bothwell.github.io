function FileData_Pairs(x)
{
x.t("differently","charts");
x.t("composition","chart");
x.t("available","appresponse");
x.t("reported","differently");
x.t("counted","successful");
x.t("receives","application-layer");
x.t("measure","end-user");
x.t("within","current");
x.t("within","selected");
x.t("table","describes");
x.t("table","application");
x.t("describes","application");
x.t("appresponse","table");
x.t("appresponse","calculate");
x.t("appresponse","subtracts");
x.t("effects","appresponse");
x.t("required","establish");
x.t("required","transfer");
x.t("appliance","responding");
x.t("appliance","note");
x.t("appliance","observe");
x.t("home","back");
x.t("regular","network");
x.t("observed","appliance");
x.t("observed","connection");
x.t("observed","start");
x.t("observed","network");
x.t("observed","note");
x.t("u.s","patents");
x.t("user","response");
x.t("user","guide");
x.t("current","project");
x.t("handshake","beginning");
x.t("handshake","tcp");
x.t("handshake","completed");
x.t("handshake","end");
x.t("tables","information");
x.t("later","syn");
x.t("last","response");
x.t("last","packet");
x.t("transfers","servers");
x.t("look","response");
x.t("notices","section");
x.t("/sec","tcp");
x.t("/sec","client");
x.t("times","observed");
x.t("times","start");
x.t("times","tcp");
x.t("times","chart");
x.t("times","server");
x.t("application-layer","response");
x.t("application-layer","request");
x.t("payload","client");
x.t("payload","include");
x.t("payload","transfer");
x.t("payload","per");
x.t("responses","turn");
x.t("reset","within");
x.t("reset","observed");
x.t("reset","rate");
x.t("reset","tcp");
x.t("reset","without");
x.t("time","composition");
x.t("time","required");
x.t("time","home");
x.t("time","look");
x.t("time","payload");
x.t("time","time");
x.t("time","connection");
x.t("time","msec");
x.t("time","tcp");
x.t("time","attempted");
x.t("time","first");
x.t("time","[msec]");
x.t("time","interval");
x.t("time","measured");
x.t("time","connections");
x.t("time","deliver");
x.t("time","takes");
x.t("time","data");
x.t("time","information");
x.t("time","sec");
x.t("time","individual");
x.t("time","[sec]");
x.t("time","server");
x.t("response","times");
x.t("response","time");
x.t("response","request");
x.t("response","first");
x.t("response","packet");
x.t("rate","/sec");
x.t("connection","counted");
x.t("connection","within");
x.t("connection","times");
x.t("connection","reset");
x.t("connection","time");
x.t("connection","ended");
x.t("connection","rate");
x.t("connection","start");
x.t("connection","three-way");
x.t("connection","request");
x.t("connection","occurs");
x.t("connection","delay");
x.t("connection","terminated");
x.t("connection","setup");
x.t("connection","requests");
x.t("connection","measured");
x.t("connection","duration");
x.t("connection","per");
x.t("ended","within");
x.t("ended","selected");
x.t("regardless","network");
x.t("regardless","whether");
x.t("total","number");
x.t("round-trip","time");
x.t("syn/ack","server");
x.t("back","top");
x.t("start","tcp");
x.t("start","first");
x.t("start","initial");
x.t("start","client");
x.t("start","server");
x.t("servers","group");
x.t("servers","clients");
x.t("size","data");
x.t("top","2014");
x.t("msec","tcp");
x.t("msec","client");
x.t("http","end");
x.t("fin","observed");
x.t("fin","connection");
x.t("fin","client");
x.t("group","respond");
x.t("during","three-way");
x.t("beginning","tcp");
x.t("responding","tcp");
x.t("complete","tcp");
x.t("complete","patent");
x.t("sum","metrics");
x.t("guide","metrics");
x.t("network","effects");
x.t("network","round-trip");
x.t("network","conditions");
x.t("three-way","handshake");
x.t("syn-ack","initial");
x.t("acks","note");
x.t("remove","round");
x.t("tcp","reset");
x.t("tcp","connection");
x.t("tcp","syn/ack");
x.t("tcp","three-way");
x.t("tcp","syn");
x.t("tcp","client");
x.t("tcp","termination");
x.t("tcp","turn");
x.t("tcp","server");
x.t("traffic","observed");
x.t("byte","response");
x.t("byte","msec");
x.t("byte","tcp");
x.t("byte","end");
x.t("byte","individual");
x.t("name","definition");
x.t("definition","client");
x.t("performance","metric");
x.t("performance","metrics");
x.t("follows","regular");
x.t("follows","start");
x.t("clients","tcp");
x.t("average","time");
x.t("average","size");
x.t("average","number");
x.t("average","duration");
x.t("end-user","response");
x.t("standard","tcp");
x.t("completed","connection");
x.t("sends","tcp");
x.t("sends","first");
x.t("sends","syn");
x.t("metric","reported");
x.t("metric","sum");
x.t("metric","name");
x.t("metric","client");
x.t("metric","good");
x.t("metric","subset");
x.t("metric","calculated");
x.t("metric","definitions");
x.t("metric","measures");
x.t("second","connection");
x.t("second","three-way");
x.t("second","data");
x.t("round","trip");
x.t("retransmissions","zero-payload");
x.t("patent","notice");
x.t("selected","time");
x.t("selected","project");
x.t("charts","tables");
x.t("request","appliance");
x.t("request","last");
x.t("request","payload");
x.t("request","rate");
x.t("request","start");
x.t("request","http");
x.t("request","metric");
x.t("request","occurs");
x.t("request","server");
x.t("failed","rate");
x.t("failed","tcp");
x.t("legal","notices");
x.t("calculate","response");
x.t("calculate","metric");
x.t("notice","legal");
x.t("occurs","client");
x.t("respond","within");
x.t("respond","application-layer");
x.t("respond","data");
x.t("delay","[msec]");
x.t("delay","initial");
x.t("long","connections");
x.t("attempted","connection");
x.t("attempted","tcp");
x.t("first","byte");
x.t("first","syn");
x.t("first","data");
x.t("first","packet");
x.t("number","responses");
x.t("number","connection");
x.t("number","tcp");
x.t("number","failed");
x.t("number","attempted");
x.t("number","successful");
x.t("terminated","tcp");
x.t("setup","time");
x.t("chart","user");
x.t("chart","remove");
x.t("whether","server");
x.t("trip","times");
x.t("2014","riverbed");
x.t("software","may");
x.t("may","covered");
x.t("requests","servers");
x.t("requests","tcp");
x.t("[msec]","payload");
x.t("[msec]","metric");
x.t("[msec]","server");
x.t("handling","long");
x.t("section","riverbed");
x.t("syn","fin");
x.t("syn","request");
x.t("syn","first");
x.t("syn","initial");
x.t("syn","end");
x.t("syn","client");
x.t("initial","three-way");
x.t("initial","tcp");
x.t("initial","client");
x.t("initial","application");
x.t("initial","server");
x.t("client","observed");
x.t("client","reset");
x.t("client","tcp");
x.t("client","traffic");
x.t("client","sends");
x.t("client","request");
x.t("client","syn");
x.t("client","send");
x.t("client","ack");
x.t("client","server");
x.t("end","time");
x.t("end","tcp");
x.t("end","initial");
x.t("end","client");
x.t("end","server");
x.t("end","seconds");
x.t("server-side","round");
x.t("project","time");
x.t("establish","initial");
x.t("subtracts","server-side");
x.t("zero-payload","acks");
x.t("existing","data");
x.t("include","retransmissions");
x.t("technology","software");
x.t("interval","payload");
x.t("measured","during");
x.t("measured","follows");
x.t("termination","sequence");
x.t("responds","connection");
x.t("send","connection");
x.t("send","first");
x.t("connections","tcp");
x.t("connections","failed");
x.t("connections","turns");
x.t("deliver","good");
x.t("turns","payload");
x.t("turns","connection");
x.t("turns","initial");
x.t("turns","(clients)");
x.t("takes","tcp");
x.t("takes","application");
x.t("sequence","start");
x.t("transfer","time");
x.t("transfer","data");
x.t("good","measure");
x.t("good","payload");
x.t("information","metric");
x.t("information","special");
x.t("data","transfers");
x.t("data","response");
x.t("data","tcp");
x.t("data","byte");
x.t("data","request");
x.t("data","transfer");
x.t("host","regardless");
x.t("ack","last");
x.t("ack","connections");
x.t("ack","server");
x.t("application","response");
x.t("application","complete");
x.t("application","performance");
x.t("successful","connection");
x.t("successful","tcp");
x.t("successful","connections");
x.t("retransmission","delay");
x.t("note","appresponse");
x.t("note","metric");
x.t("subset","existing");
x.t("sec","tcp");
x.t("sec","client");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("packet","initial");
x.t("packet","end");
x.t("packet","information");
x.t("packet","note");
x.t("packet","turn");
x.t("following","table");
x.t("special","handling");
x.t("turn","user");
x.t("turn","ended");
x.t("turn","rate");
x.t("turn","metric");
x.t("turn","measured");
x.t("turn","server");
x.t("individual","connection");
x.t("individual","turn");
x.t("duration","tcp");
x.t("duration","measured");
x.t("duration","sec");
x.t("observe","request");
x.t("calculated","response");
x.t("per","tcp");
x.t("per","second");
x.t("[sec]","client");
x.t("[sec]","retransmission");
x.t("definitions","user");
x.t("definitions","application");
x.t("definitions","following");
x.t("without","standard");
x.t("covered","u.s");
x.t("measures","application-layer");
x.t("conditions","start");
x.t("metrics","available");
x.t("metrics","user");
x.t("metrics","metric");
x.t("server","receives");
x.t("server","observed");
x.t("server","response");
x.t("server","reset");
x.t("server","regardless");
x.t("server","total");
x.t("server","fin");
x.t("server","syn-ack");
x.t("server","average");
x.t("server","sends");
x.t("server","calculate");
x.t("server","respond");
x.t("server","number");
x.t("server","client");
x.t("server","responds");
x.t("server","send");
x.t("server","turns");
x.t("server","host");
x.t("server","data");
x.t("server","server");
x.t("seconds","later");
x.t("(clients)","client");
x.t("patents","complete");
}
