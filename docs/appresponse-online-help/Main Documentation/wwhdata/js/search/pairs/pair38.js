function FileData_Pairs(x)
{
x.t("example","connection");
x.t("example","suppose");
x.t("example","means");
x.t("example","often");
x.t("example","local_lan");
x.t("example","occur");
x.t("interfaces","included");
x.t("interfaces","appresponse");
x.t("interfaces","tables");
x.t("interfaces","group");
x.t("interfaces","connected");
x.t("interfaces","monitoring");
x.t("included","total");
x.t("included","monitoring");
x.t("included","mifg");
x.t("supports","high");
x.t("available","exactly");
x.t("reported","tables");
x.t("possible","scenario");
x.t("switches","load");
x.t("workflows","need");
x.t("proxy","proxy");
x.t("proxy","wan");
x.t("proxy","server");
x.t("200","packets");
x.t("console","functionality");
x.t("console","view");
x.t("captures","4100");
x.t("captures","advanced");
x.t("captures","configuring");
x.t("captures","de-duplication");
x.t("captures","following");
x.t("every","interface");
x.t("every","monitoring");
x.t("inbound","outbound");
x.t("inbound","direction");
x.t("clear","traffic");
x.t("within","minute");
x.t("appresponse","uses");
x.t("appresponse","collects");
x.t("appresponse","automatically");
x.t("appresponse","determines");
x.t("appresponse","group");
x.t("appresponse","observes");
x.t("appresponse","cannot");
x.t("appresponse","appliances");
x.t("appresponse","de-duplicates");
x.t("appresponse","monitoring");
x.t("appresponse","excludes");
x.t("appresponse","treats");
x.t("table","table");
x.t("table","de-duplication");
x.t("table","mon");
x.t("table","options");
x.t("table","option");
x.t("table","view");
x.t("table","desktop");
x.t("description","group");
x.t("description","collect");
x.t("description","brief");
x.t("alternate","set");
x.t("describes","data");
x.t("b-to-a","packets");
x.t("appliance","supports");
x.t("appliance","mifg_1");
x.t("appliance","observes");
x.t("appliance","considers");
x.t("appliance","discards");
x.t("appliance","sees");
x.t("appliance","ignores");
x.t("appliance","observe");
x.t("appliance","mifg");
x.t("obsolete","interface");
x.t("key","concept");
x.t("bidirectional","connection");
x.t("home","back");
x.t("observed","appresponse");
x.t("observed","interface");
x.t("observed","packets");
x.t("observed","multiple");
x.t("observed","connection");
x.t("observed","mifgs");
x.t("observed","network");
x.t("observed","traffic");
x.t("observed","different");
x.t("observed","isolating");
x.t("observed","view");
x.t("observed","ignores");
x.t("observed","group's");
x.t("observed","mifg");
x.t("apply","select");
x.t("apply","monitoring");
x.t("apply","bottom");
x.t("averages","conversations");
x.t("u.s","patents");
x.t("user","guide");
x.t("enabled","appresponse");
x.t("enabled","inaccurate");
x.t("enabled","metrics");
x.t("tables","mon");
x.t("tables","enable");
x.t("tables","except");
x.t("situations","want");
x.t("locations","overall");
x.t("locations","analyzing");
x.t("locations","consider");
x.t("uses","set");
x.t("uses","separate");
x.t("set","packets");
x.t("set","internal");
x.t("set","conversations");
x.t("set","defined");
x.t("pair","interest");
x.t("transfers","packets");
x.t("cache","pre-fetch");
x.t("interface","table");
x.t("interface","appliance");
x.t("interface","group");
x.t("interface","normally");
x.t("interface","groups");
x.t("interface","users");
x.t("necessary","observe");
x.t("physical","interfaces");
x.t("introduced","7.2");
x.t("collects","mifg");
x.t("collects","metrics");
x.t("tap","ports");
x.t("tap","option");
x.t("calculates","metrics");
x.t("notices","section");
x.t("change","value");
x.t("unidirectional","tap");
x.t("unidirectional","flows");
x.t("times","within");
x.t("type","data");
x.t("packets","example");
x.t("packets","appresponse");
x.t("packets","observed");
x.t("packets","connection");
x.t("packets","mifgs");
x.t("packets","monitored");
x.t("packets","number");
x.t("packets","previewing");
x.t("packets","figure");
x.t("packets","highest-packet");
x.t("packets","exchanged");
x.t("packets","packet");
x.t("packets","individual");
x.t("packets","across");
x.t("packets","therefore");
x.t("packets","mifg");
x.t("reset","historical");
x.t("lower-number","port");
x.t("multiple","locations");
x.t("multiple","interface");
x.t("multiple","mifgs");
x.t("multiple","tiers");
x.t("multiple","groups");
x.t("(mifg)","logical");
x.t("total","traffic");
x.t("connection","observed");
x.t("connection","transfers");
x.t("connection","set");
x.t("connection","connection");
x.t("connection","regardless");
x.t("connection","follows");
x.t("connection","split");
x.t("connection","different");
x.t("connection","100");
x.t("connection","two");
x.t("connection","based");
x.t("connection","mifg");
x.t("retained","traffic");
x.t("regardless","mifg");
x.t("however","appliance");
x.t("down","defined");
x.t("networks","divided");
x.t("default","configuration");
x.t("speed","captures");
x.t("4100","mifgs");
x.t("listed","following");
x.t("text","description");
x.t("automatically","assigns");
x.t("back","top");
x.t("mifgs","appliance");
x.t("mifgs","key");
x.t("mifgs","tables");
x.t("mifgs","calculates");
x.t("mifgs","collects");
x.t("mifgs","want");
x.t("mifgs","group");
x.t("mifgs","traffic");
x.t("mifgs","drill");
x.t("mifgs","define");
x.t("mifgs","ignored");
x.t("mifgs","conversations");
x.t("mifgs","conversation");
x.t("mifgs","figure");
x.t("mifgs","information");
x.t("mifgs","packet");
x.t("mifgs","except");
x.t("mifgs","observe");
x.t("mifgs","mifg");
x.t("advanced","appresponse");
x.t("advanced","packet-capture");
x.t("consists","group");
x.t("want","avoid");
x.t("want","exclude");
x.t("want","ensure");
x.t("want","specify");
x.t("new","number");
x.t("distinct","conversations");
x.t("distinct","separate");
x.t("turned","appliance");
x.t("turned","however");
x.t("includes","two");
x.t("top","2014");
x.t("policies","enforced");
x.t("policies","across");
x.t("need","consider");
x.t("determines","inbound");
x.t("determines","appresponse");
x.t("outbound","traffic");
x.t("outbound","direction");
x.t("clicking","apply");
x.t("list","specified");
x.t("group","included");
x.t("group","description");
x.t("group","table");
x.t("group","interface");
x.t("group","reset");
x.t("group","(mifg)");
x.t("group","multiple");
x.t("group","includes");
x.t("group","monitored");
x.t("group","traffic");
x.t("group","name");
x.t("group","settings");
x.t("group","limit");
x.t("group","exclude");
x.t("group","checkbox");
x.t("group","option");
x.t("group","monitoring");
x.t("group","defined");
x.t("group","captured");
x.t("group","note");
x.t("group","update");
x.t("monitored","traffic");
x.t("assign","every");
x.t("packet-capture","functionality");
x.t("complete","patent");
x.t("guide","groups");
x.t("validate","traffic");
x.t("network","locations");
x.t("network","segments");
x.t("network","segment");
x.t("wan","accelerator");
x.t("wan","conversations");
x.t("wan","links");
x.t("wan","lan");
x.t("results","multiple");
x.t("results","unreliable");
x.t("results","de-duplication");
x.t("results","inaccurate");
x.t("results","note");
x.t("results","individual");
x.t("normally","reported");
x.t("opposites","sides");
x.t("transparent","proxy");
x.t("traffic","observed");
x.t("traffic","multiple");
x.t("traffic","policies");
x.t("traffic","results");
x.t("traffic","opposites");
x.t("traffic","wan");
x.t("traffic","traffic");
x.t("traffic","direction");
x.t("traffic","relative");
x.t("traffic","occurs");
x.t("traffic","ignored");
x.t("traffic","grouped");
x.t("traffic","conversation");
x.t("traffic","appliances");
x.t("traffic","specific");
x.t("traffic","figure");
x.t("traffic","monitoring");
x.t("traffic","information");
x.t("traffic","data");
x.t("traffic","mifg");
x.t("traffic","metrics");
x.t("traffic","de-deduplication");
x.t("traffic","flows");
x.t("configuring","appliance");
x.t("configuring","monitoring");
x.t("mifg_1","...mifg_");
x.t("tcp","connection");
x.t("tcp","port");
x.t("unreliable","information");
x.t("duplicate","packets");
x.t("analyze","troubleshoot");
x.t("high","speed");
x.t("specified","setup");
x.t("guarantee","accurate");
x.t("functionality","introduced");
x.t("functionality","useful");
x.t("functionality","option");
x.t("name","monitoring");
x.t("name","descriptive");
x.t("direction","lower-number");
x.t("direction","relative");
x.t("direction","higher-number");
x.t("resulting","traffic");
x.t("resulting","de-duplication");
x.t("box","clear");
x.t("settings","clicking");
x.t("overall","traffic");
x.t("observes","packets");
x.t("observes","traffic");
x.t("observes","300");
x.t("observes","conversations");
x.t("observes","conversation");
x.t("common","real-world");
x.t("discusses","following");
x.t("enables","view");
x.t("enables","mifg");
x.t("enables","specify");
x.t("addresses","apply");
x.t("addresses","traffic");
x.t("addresses","option");
x.t("exactly","two");
x.t("minute","traffic");
x.t("minute","resulting");
x.t("follows","mifg");
x.t("(mifgs)","packet");
x.t("limit","reporting");
x.t("custom","addresses");
x.t("avoid","possible");
x.t("avoid","combining");
x.t("drill","down");
x.t("useful","workflows");
x.t("useful","monitoring");
x.t("useful","following");
x.t("transferring","traffic");
x.t("segments","example");
x.t("segments","viewing");
x.t("segments","firewalls");
x.t("de-duplication","type");
x.t("de-duplication","results");
x.t("de-duplication","captured");
x.t("de-duplication","based");
x.t("web","custom");
x.t("web","options");
x.t("web","figure");
x.t("web","item");
x.t("address","list");
x.t("exclude","traffic");
x.t("exclude","reporting");
x.t("segment","traffic");
x.t("pairs","configure");
x.t("300","packets");
x.t("device","example");
x.t("device","compress");
x.t("relative","limit");
x.t("relative","internal");
x.t("relative","option");
x.t("relative","mifg");
x.t("three","options");
x.t("ports","instead");
x.t("metric","results");
x.t("concept","mifg");
x.t("patent","notice");
x.t("divided","logical");
x.t("selected","appresponse");
x.t("legal","notices");
x.t("collect","data");
x.t("mon","interface");
x.t("notice","legal");
x.t("logical","segments");
x.t("logical","grouping");
x.t("balancers","devices");
x.t("checkbox","groups");
x.t("occurs","different");
x.t("suppose","appliance");
x.t("select","box");
x.t("select","limit");
x.t("select","number");
x.t("collection","example");
x.t("collection","appliance");
x.t("collection","enabled");
x.t("collection","turned");
x.t("collection","monitoring");
x.t("collection","captured");
x.t("split","across");
x.t("options","internal");
x.t("options","page");
x.t("options","system");
x.t("reason","appresponse");
x.t("means","metrics");
x.t("viewing","monitored");
x.t("viewing","comparing");
x.t("number","mifgs");
x.t("number","groups");
x.t("number","monitoring");
x.t("setup","page");
x.t("accelerator","instead");
x.t("reporting","observed");
x.t("reporting","traffic");
x.t("reporting","monitoring");
x.t("combining","lan");
x.t("define","groups");
x.t("define","page");
x.t("define","configure");
x.t("different","times");
x.t("different","mifgs");
x.t("different","network");
x.t("tiers","section");
x.t("cannot","guarantee");
x.t("unique","packets");
x.t("unique","conversations");
x.t("re-write","otherwise");
x.t("particular","packet");
x.t("2014","riverbed");
x.t("software","may");
x.t("may","covered");
x.t("previewing","downloading");
x.t("ignored","appliance");
x.t("ignored","configuring");
x.t("ignored","section");
x.t("instead","simply");
x.t("instead","span");
x.t("scenario","good");
x.t("ips","conversations");
x.t("firewalls","switches");
x.t("types","devices");
x.t("analyzing","traffic");
x.t("section","describes");
x.t("section","discusses");
x.t("section","riverbed");
x.t("release","appresponse");
x.t("internal","addresses");
x.t("internal","address");
x.t("one-minute","averages");
x.t("real-world","example");
x.t("isolating","traffic");
x.t("interest","observed");
x.t("simply","transferring");
x.t("grouped","defined");
x.t("correspond","specific");
x.t("enable","option");
x.t("connected","unidirectional");
x.t("client","proxy");
x.t("client","server");
x.t("groups","user");
x.t("groups","tap");
x.t("groups","multiple");
x.t("groups","networks");
x.t("groups","group");
x.t("groups","enables");
x.t("groups","(mifgs)");
x.t("groups","select");
x.t("groups","viewing");
x.t("groups","define");
x.t("groups","correspond");
x.t("groups","option");
x.t("groups","affect");
x.t("groups","conversation");
x.t("groups","longer");
x.t("groups","page");
x.t("groups","monitoring");
x.t("groups","system");
x.t("groups","mifg");
x.t("often","necessary");
x.t("assigns","inbound");
x.t("compress","cache");
x.t("option","available");
x.t("option","enabled");
x.t("option","mifgs");
x.t("option","determines");
x.t("option","enables");
x.t("option","useful");
x.t("option","selected");
x.t("option","monitoring");
x.t("higher-number","port");
x.t("affect","metric");
x.t("issue","appliance");
x.t("issue","packets");
x.t("100","packets");
x.t("effectively","validate");
x.t("conversations","appresponse");
x.t("conversations","home");
x.t("conversations","observed");
x.t("conversations","multiple");
x.t("conversations","resulting");
x.t("conversations","overall");
x.t("conversations","avoid");
x.t("conversations","client");
x.t("conversations","conversations");
x.t("conversations","include");
x.t("conversations","represent");
x.t("conversations","individual");
x.t("conversations","across");
x.t("historical","data");
x.t("ensure","data");
x.t("span","port");
x.t("considers","b-to-a");
x.t("considers","packets");
x.t("consider","locations");
x.t("consider","network");
x.t("conversation","pair");
x.t("conversation","minute");
x.t("conversation","pairs");
x.t("conversation","client");
x.t("longer","retained");
x.t("appliances","advanced");
x.t("appliances","group");
x.t("configuration","consists");
x.t("brief","text");
x.t("de-duplicates","traffic");
x.t("include","set");
x.t("technology","software");
x.t("local_lan","firewall_wan_side");
x.t("value","page");
x.t("reflect","new");
x.t("hosts","uses");
x.t("hosts","tcp");
x.t("discards","duplicate");
x.t("enforced","specific");
x.t("specific","network");
x.t("specific","device");
x.t("specific","links");
x.t("figure","appliance");
x.t("figure","default");
x.t("figure","system");
x.t("figure","mifg");
x.t("view","table");
x.t("view","tables");
x.t("view","traffic");
x.t("actually","two");
x.t("connections","context");
x.t("represent","distinct");
x.t("sees","packets");
x.t("a-to-b","considers");
x.t("page","listed");
x.t("page","want");
x.t("page","web");
x.t("page","system");
x.t("page","used");
x.t("page","updated");
x.t("good","practice");
x.t("separate","unidirectional");
x.t("separate","distinct");
x.t("separate","traffic");
x.t("context","connection");
x.t("highest-packet","mifg");
x.t("monitoring","interfaces");
x.t("monitoring","interface");
x.t("information","mifgs");
x.t("information","traffic");
x.t("information","limit");
x.t("information","note");
x.t("configure","mifgs");
x.t("configure","groups");
x.t("configure","monitoring");
x.t("data","obsolete");
x.t("data","apply");
x.t("data","monitored");
x.t("data","group");
x.t("data","collection");
x.t("data","one-minute");
x.t("data","monitoring");
x.t("validating","analyzing");
x.t("defined","mifgs");
x.t("defined","monitoring");
x.t("defined","mifg");
x.t("practice","enable");
x.t("practice","configure");
x.t("inaccurate","reason");
x.t("inaccurate","figure");
x.t("inaccurate","metrics");
x.t("exchanged","two");
x.t("ignores","packets");
x.t("ignores","a-to-b");
x.t("comparing","conversations");
x.t("captured","packets");
x.t("...mifg_","note");
x.t("case","want");
x.t("excludes","reporting");
x.t("port","appresponse");
x.t("port","outbound");
x.t("port","collect");
x.t("port","note");
x.t("troubleshoot","types");
x.t("users","define");
x.t("downloading","captured");
x.t("administration","web");
x.t("note","packets");
x.t("note","option");
x.t("note","good");
x.t("note","following");
x.t("two","interfaces");
x.t("two","hosts");
x.t("two","separate");
x.t("otherwise","transform");
x.t("treats","physical");
x.t("7.2","release");
x.t("based","200");
x.t("based","packets");
x.t("based","300");
x.t("based","unique");
x.t("based","one-minute");
x.t("applications","individual");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("packet","captures");
x.t("packet","observed");
x.t("accurate","results");
x.t("sides","transparent");
x.t("links","wan");
x.t("links","validating");
x.t("following","table");
x.t("following","situations");
x.t("following","mifgs");
x.t("following","assign");
x.t("following","monitoring");
x.t("system","interface");
x.t("system","administration");
x.t("used","captured");
x.t("except","mon");
x.t("except","observe");
x.t("bottom","page");
x.t("individual","packets");
x.t("individual","connection");
x.t("individual","ips");
x.t("individual","connections");
x.t("observe","packets");
x.t("observe","traffic");
x.t("observe","conversations");
x.t("observe","completely");
x.t("pre-fetch","re-write");
x.t("grouping","physical");
x.t("firewall_wan_side","appresponse");
x.t("across","multiple");
x.t("across","different");
x.t("load","balancers");
x.t("transform","traffic");
x.t("occur","bidirectional");
x.t("therefore","inaccurate");
x.t("covered","u.s");
x.t("desktop","console");
x.t("descriptive","name");
x.t("completely","unique");
x.t("devices","analyze");
x.t("devices","effectively");
x.t("mifg","200");
x.t("mifg","appliance");
x.t("mifg","observed");
x.t("mifg","calculates");
x.t("mifg","packets");
x.t("mifg","mifgs");
x.t("mifg","assign");
x.t("mifg","traffic");
x.t("mifg","configuring");
x.t("mifg","functionality");
x.t("mifg","common");
x.t("mifg","mon");
x.t("mifg","viewing");
x.t("mifg","particular");
x.t("mifg","issue");
x.t("mifg","good");
x.t("mifg","highest-packet");
x.t("mifg","data");
x.t("mifg","information");
x.t("mifg","applications");
x.t("mifg","desktop");
x.t("mifg","specify");
x.t("mifg","mifg");
x.t("metrics","connection");
x.t("metrics","tcp");
x.t("metrics","select");
x.t("metrics","based");
x.t("item","description");
x.t("specify","alternate");
x.t("specify","change");
x.t("specify","three");
x.t("updated","reflect");
x.t("group's","monitoring");
x.t("de-deduplication","results");
x.t("update","interface");
x.t("flows","example");
x.t("flows","observed");
x.t("lan","wan");
x.t("lan","device");
x.t("server","actually");
x.t("server","case");
x.t("patents","complete");
}
