function FileData_Pairs(x)
{
x.t(".net","classes");
x.t("lists","types");
x.t("files","saved");
x.t("files","dialog");
x.t("files","record");
x.t("files","generated");
x.t("files","created");
x.t("files","used");
x.t("saved","trace");
x.t("saved","default");
x.t("saved","following");
x.t("\\op_admin\\ace_report_settings","ascii");
x.t("captures","remote");
x.t("captures","ascii");
x.t("within","apptransaction");
x.t("within","application");
x.t("table","lists");
x.t("table","8-5");
x.t("description","format");
x.t(".ace.qpb","quickpredict");
x.t("create","transaction");
x.t("adapters","either");
x.t("binary","traffic");
x.t("binary","data");
x.t("home","back");
x.t(".apptrace","application");
x.t("u.s","patents");
x.t("user","guide");
x.t("user_home","\\op_admin\\ace_report_settings");
x.t("user_home","\\op_admin\\ace_import_configs");
x.t("continuous","captures");
x.t("dialog","box");
x.t("remote","capture");
x.t("set","preference");
x.t("download","settings");
x.t("instrumentation","data");
x.t("bar","charts");
x.t("bar","chart");
x.t("bar","template");
x.t(".ace.rt.txt","report");
x.t("appinternals","xpert");
x.t("notices","section");
x.t("support","center");
x.t("\\op_admin\\ace_import_configs","change");
x.t("change","default");
x.t(".ace.ic.txt","import");
x.t("trace","files");
x.t("trace","binary");
x.t("trace","file");
x.t("trace","(s)");
x.t("calls","within");
x.t("hierarchy","java");
x.t("packets","packet");
x.t("execution","sequence");
x.t("default","file");
x.t("default","directory");
x.t("default","model");
x.t("text",".ace.qpb");
x.t("text",".ace.rt.txt");
x.t("text",".ace.ic.txt");
x.t("text",".aed.m");
x.t("text","ace.f");
x.t("high-level","information");
x.t("back","top");
x.t("top","2013");
x.t("file","saved");
x.t("file","files");
x.t("file","binary");
x.t("file","trace");
x.t("file","default");
x.t("file","file");
x.t("file","imported");
x.t("file","comparison");
x.t("file","types");
x.t("file","directory");
x.t("file","main");
x.t("file","word");
x.t("file","used");
x.t("file","following");
x.t("file","contains");
x.t("capture","files");
x.t("capture","download");
x.t("capture","agents");
x.t("capture","traffic");
x.t("capture","import");
x.t("capture","manager");
x.t("capture","agent");
x.t("during","capture");
x.t("complete","patent");
x.t("guide","previewing");
x.t("filter","file");
x.t("filter","hosts");
x.t("agents","contain");
x.t("results","file");
x.t("traffic","file");
x.t("traffic","creating");
x.t("traffic","data");
x.t(".appcapture","application");
x.t("imported","create");
x.t("creating","transaction");
x.t("settings","file");
x.t("settings","button");
x.t("settings","load");
x.t("box","remote");
x.t(".ace.qps","quickpredict");
x.t("appcapture","file");
x.t("stored","packet");
x.t("analyzer","model");
x.t("edit","file");
x.t("comparison","reports");
x.t("preference","ace_import_config_dir");
x.t("filtering","traffic");
x.t("ascii","text");
x.t("whiteboard","model");
x.t("record","execution");
x.t("ports","during");
x.t("contain","raw");
x.t("patent","notice");
x.t("charts","default");
x.t("legal","notices");
x.t("ace_import_config_dir","ascii");
x.t("raw","binary");
x.t("configured","trace");
x.t(".pp","pathprobe");
x.t("notice","legal");
x.t("on-demand","captures");
x.t(".aed.m","transaction");
x.t("button","binary");
x.t("importing","filtering");
x.t("chart","quickpredict");
x.t("dotnet","data");
x.t("2013","riverbed");
x.t("editor","continuous");
x.t("editor","on-demand");
x.t("decodes","within");
x.t("software","may");
x.t("may","covered");
x.t("previewing","importing");
x.t("report","settings");
x.t("detailed","protocol");
x.t("types","files");
x.t("types","user");
x.t("types","file");
x.t("types","following");
x.t("types","suffix");
x.t("format",".ace.cr.txt");
x.t("directory","binary");
x.t("directory","user_home");
x.t("directory","set");
x.t("directory","ascii");
x.t("directory","defined");
x.t("directory","specify");
x.t("section","riverbed");
x.t("reports","default");
x.t("task","except");
x.t("(jida)","dotnet");
x.t("click","capture");
x.t("java",".net");
x.t("java","instrumentation");
x.t("apptransaction","xpert");
x.t("windows","merge");
x.t(".ace.cr.txt","settings");
x.t("configuration","file");
x.t("technology","software");
x.t("hosts","ports");
x.t("main","file");
x.t("8-5","apptransaction");
x.t("import","edit");
x.t("import","configuration");
x.t("manager","click");
x.t("generated","appinternals");
x.t("quickpredict","bar");
x.t("quickpredict","simulation");
x.t("template","file");
x.t("word","(.rtf)");
x.t("(s)","used");
x.t("ace.f","packet");
x.t("show","detailed");
x.t("sequence","calls");
x.t("data","adapters");
x.t("data","home");
x.t("data",".apptrace");
x.t("data",".appcapture");
x.t("data",".ace.qps");
x.t("data","appcapture");
x.t("data",".pp");
x.t("data",".atc.m");
x.t("data","adapter");
x.t("information","stored");
x.t("information","application");
x.t("information","individual");
x.t("xpert","files");
x.t("xpert","table");
x.t("xpert","file");
x.t("xpert","data");
x.t("agent","editor");
x.t("defined","capture");
x.t("application","trace");
x.t("application","capture");
x.t("application","task");
x.t("application","call");
x.t("transaction","analyzer");
x.t("transaction","whiteboard");
x.t("protocol","decodes");
x.t("classes","data");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("packet","trace");
x.t("packet","filter");
x.t("packet","information");
x.t("merge","capture");
x.t("created","capture");
x.t("call","hierarchy");
x.t("model","binary");
x.t("model","file");
x.t("model","directory");
x.t("model","used");
x.t("following","table");
x.t("following","directory");
x.t("following","windows");
x.t("used","create");
x.t("used","filter");
x.t("used","apptransaction");
x.t("used","show");
x.t("simulation","settings");
x.t("either","java");
x.t(".atc.m","transaction");
x.t("except","information");
x.t("individual","packets");
x.t("pathprobe","results");
x.t("(.rtf)","reports");
x.t("load","quickpredict");
x.t("covered","u.s");
x.t("suffix","description");
x.t("adapter","trace");
x.t("adapter","configured");
x.t("adapter","(jida)");
x.t("contains","high-level");
x.t("contains","settings");
x.t("specify","capture");
x.t("patents","complete");
}
