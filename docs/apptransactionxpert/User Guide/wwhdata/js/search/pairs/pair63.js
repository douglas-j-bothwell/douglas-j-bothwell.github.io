function FileData_Pairs(x)
{
x.t("example","packet");
x.t("included","excluded");
x.t("capturing","traffic");
x.t("protocols","change");
x.t("protocols","frame");
x.t("protocols","capture");
x.t("protocols","interest");
x.t("protocols","include");
x.t("protocols","import");
x.t("protocols","save");
x.t("protocols","specify");
x.t("combined","create");
x.t("version","specified");
x.t("version","choose");
x.t("right","side");
x.t("files","dialog");
x.t("captures","imports");
x.t("9-1","capture");
x.t("9-1","filter");
x.t("9-1","webworks_writedivclose");
x.t("9-1","specifying");
x.t("dlc","others");
x.t("full","address");
x.t("create","composite");
x.t("create","protocol");
x.t("create","packet");
x.t("table","logically");
x.t("table","configured");
x.t("table","click");
x.t("table","specify");
x.t("9-2","capture");
x.t("9-2","webworks_writedivclose");
x.t("9-2","specifying");
x.t("and\u2019ed","create");
x.t("source","destination");
x.t("bidirectional","clicking");
x.t("home","back");
x.t("apply","filter");
x.t("u.s","patents");
x.t("user","guide");
x.t("unspecified","match");
x.t("remote","application");
x.t("dialog","box");
x.t("set","exclude");
x.t("set","host");
x.t("set","port");
x.t("set","ace_capture_vlan_bpf_enable");
x.t("line","button");
x.t("everything","connections");
x.t("everything","following");
x.t("notices","section");
x.t("support","center");
x.t("non-multicast","packets");
x.t("wildcard","172");
x.t("unidirectional","bidirectional");
x.t("change","protocol");
x.t("close","dialog");
x.t("trace","default");
x.t("trace","filters");
x.t("trace","filter");
x.t("trace","choosing");
x.t("trace","selecting");
x.t("trace","explorer");
x.t("trace","merge");
x.t("trace","packet");
x.t("packets","udp");
x.t("packets","filtering");
x.t("packets","originating");
x.t("packets","based");
x.t("time","stamp");
x.t("time","ranges");
x.t("sections","dialog");
x.t("sections","specifying");
x.t("broadcast/multicast","traffic");
x.t("hosts/ports","import");
x.t("hosts/ports","packet");
x.t("sort","table");
x.t("filters","capturing");
x.t("filters","set");
x.t("filters","useful");
x.t("filters","packet");
x.t("default","apptransaction");
x.t("partial","address");
x.t("needed","click");
x.t("needed","specify");
x.t("back","top");
x.t("consists","criteria");
x.t("single","port");
x.t("nearly","non-broadcast");
x.t("non-broadcast","non-multicast");
x.t("frame","number");
x.t("frame","numbers");
x.t("192.168.1.1/9","equivalent");
x.t("top","2013");
x.t("capture","files");
x.t("capture","filters");
x.t("capture","file");
x.t("capture","agents");
x.t("capture","vlan");
x.t("capture","selecting");
x.t("capture","import");
x.t("capture","data");
x.t("capture","agent");
x.t("file","filter");
x.t("list","remove");
x.t("list","combination");
x.t("clicking","direction");
x.t("udp","data");
x.t("100-249","comma-separated");
x.t("add","line");
x.t("add","protocol");
x.t("add","packet");
x.t("stamp","ranges");
x.t("complete","patent");
x.t("guide","previewing");
x.t("agents","apply");
x.t("filter","example");
x.t("filter","capturing");
x.t("filter","captures");
x.t("filter","dialog");
x.t("filter","set");
x.t("filter","trace");
x.t("filter","packets");
x.t("filter","consists");
x.t("filter","capture");
x.t("filter","follows");
x.t("filter","viewing");
x.t("filter","click");
x.t("filter","include");
x.t("filter","import");
x.t("filter","reuse");
x.t("filter","packet");
x.t("remove","protocol");
x.t("traffic","trace");
x.t("traffic","capture");
x.t("traffic","filter");
x.t("traffic","checkboxes");
x.t("traffic","filtering");
x.t("traffic","exclude");
x.t("traffic","apptransaction");
x.t("traffic","figure");
x.t("traffic","packet");
x.t("configuring","capture");
x.t("tcp","dlc");
x.t("false","figure");
x.t("false","procedure");
x.t("false","choose");
x.t("buttons","right");
x.t("buttons","include");
x.t("buttons","import");
x.t("checkboxes","needed");
x.t("specified","capture");
x.t("specified","criteria");
x.t("true","home");
x.t("box","trace");
x.t("box","capture");
x.t("box","logical");
x.t("box","viewing");
x.t("box","end");
x.t("box","figure");
x.t("box","described");
x.t("box","contains");
x.t("direction","protocols");
x.t("direction","add");
x.t("direction","cell");
x.t("direction","packet");
x.t("creating","transaction");
x.t("resulting","filter");
x.t("name","capture");
x.t("name","address");
x.t("range","filtering");
x.t("range","port");
x.t("analyzer","apply");
x.t("analyzer","models");
x.t("edit","filter");
x.t("follows","set");
x.t("follows","lines");
x.t("or\u2019ed","create");
x.t("webworks_writedivopen","wwdd175056");
x.t("webworks_writedivopen","wwdd175026");
x.t("preference","true");
x.t("filtering","table");
x.t("filtering","user");
x.t("filtering","set");
x.t("filtering","traffic");
x.t("filtering","configured");
x.t("filtering","click");
x.t("filtering","packet");
x.t("filtering","irrelevant");
x.t("filtering","used");
x.t("useful","filtering");
x.t("exclude","protocols");
x.t("exclude","multicast");
x.t("exclude","broadcast");
x.t("exclude","packet");
x.t("exclude","criteria");
x.t("destination","hosts");
x.t("address","full");
x.t("address","partial");
x.t("address","ending");
x.t("address","using");
x.t("selection","radio");
x.t("composite","filter");
x.t("lines","protocol");
x.t("lines","packet");
x.t("ports","direction");
x.t("ports","follows");
x.t("flow","unidirectional");
x.t("flow","filter");
x.t("flow","filtering");
x.t("flow","host");
x.t("flow","criteria");
x.t("logically","or\u2019ed");
x.t("cell","selecting");
x.t("cell","following");
x.t("mask","255.128.0.0");
x.t("patent","notice");
x.t("webworksrootpath","wwdd175056");
x.t("webworksrootpath","wwdd175026");
x.t("192.168.42","address");
x.t("255.128.0.0","set");
x.t("255.128.0.0","dns");
x.t("dns","name");
x.t("pop-up","list");
x.t("vlan","traffic");
x.t("legal","notices");
x.t("choosing","edit");
x.t("configured","capture");
x.t("configured","import");
x.t("equivalent","matching");
x.t("wwdd175056","false");
x.t("notice","legal");
x.t("logical","and\u2019ed");
x.t("button","needed");
x.t("button","select");
x.t("button","repeat");
x.t("select","unspecified");
x.t("select","click");
x.t("select","choose");
x.t("select","protocol");
x.t("importing","capture");
x.t("importing","filtering");
x.t("importing","captured");
x.t("viewing","capture");
x.t("viewing","captured");
x.t("others","following");
x.t("number","time");
x.t("number","range");
x.t("side","specify");
x.t("2013","riverbed");
x.t("editor","dialog");
x.t("whether","protocol");
x.t("whether","packet");
x.t("combination","single");
x.t("different","protocol");
x.t("software","may");
x.t("may","covered");
x.t("previewing","importing");
x.t("heading","specify");
x.t("ignored","deleted");
x.t("types","criteria");
x.t("webworks_writearrow","webworksrootpath");
x.t("match","protocols");
x.t("section","riverbed");
x.t("interest","add");
x.t("excluded","simply");
x.t("simply","ignored");
x.t("steps","choose");
x.t("end","procedure");
x.t("click","close");
x.t("click","add");
x.t("click","remove");
x.t("click","save");
x.t("click","column");
x.t("multicast","traffic");
x.t("apptransaction","xpert");
x.t("webworks_writedivclose","note");
x.t("webworks_writedivclose","following");
x.t("include","everything");
x.t("include","exclude");
x.t("include","connections");
x.t("include","following");
x.t("technology","software");
x.t("hosts","ports");
x.t("ip-based","filter");
x.t("figure","9-1");
x.t("figure","9-2");
x.t("several","types");
x.t("selecting","direction");
x.t("selecting","radio");
x.t("172","192.168.42");
x.t("import","version");
x.t("import","everything");
x.t("import","packets");
x.t("import","following");
x.t("originating","host");
x.t("wwdd175026","false");
x.t("radio","buttons");
x.t("broadcast","traffic");
x.t("connections","following");
x.t("models","packet");
x.t("notation","192.168.1.1/9");
x.t("specifying","traffic");
x.t("specifying","several");
x.t("specifying","packet");
x.t("data","trace");
x.t("data","tcp");
x.t("data","resulting");
x.t("data","apptransaction");
x.t("host","udp");
x.t("host","cell");
x.t("host","port");
x.t("host","protocol");
x.t("xpert","captures");
x.t("xpert","apply");
x.t("xpert","capture");
x.t("xpert","webworks_writearrow");
x.t("agent","remote");
x.t("agent","importing");
x.t("agent","editor");
x.t("agent","using");
x.t("save","filter");
x.t("save","defined");
x.t("save","save");
x.t("defined","filter");
x.t("application","capture");
x.t("reuse","creating");
x.t("captured","traffic");
x.t("described","configuring");
x.t("explorer","version");
x.t("explorer","webworks_writedivopen");
x.t("explorer","webworks_writearrow");
x.t("explorer","transaction");
x.t("port","direction");
x.t("port","cell");
x.t("port","number");
x.t("port","numbers");
x.t("port","ranges");
x.t("procedure","9-1");
x.t("procedure","9-2");
x.t("procedure","specify");
x.t("choose","whether");
x.t("choose","different");
x.t("repeat","steps");
x.t("transaction","analyzer");
x.t("protocol","filtering");
x.t("protocol","pop-up");
x.t("protocol","button");
x.t("protocol","select");
x.t("protocol","click");
x.t("protocol","criteria");
x.t("note","sort");
x.t("note","capture");
x.t("column","heading");
x.t("based","hosts");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("packet","trace");
x.t("packet","filters");
x.t("packet","filtering");
x.t("packet","flow");
x.t("packet","flows");
x.t("irrelevant","traffic");
x.t("merge","capture");
x.t("numbers","time");
x.t("numbers","100-249");
x.t("numbers","port");
x.t("following","protocols");
x.t("following","hosts/ports");
x.t("following","single");
x.t("following","address");
x.t("following","dns");
x.t("following","include");
x.t("following","procedure");
x.t("following","either");
x.t("used","include");
x.t("ending","wildcard");
x.t("either","selection");
x.t("ace_capture_vlan_bpf_enable","preference");
x.t("using","mask");
x.t("using","ip-based");
x.t("using","slash");
x.t("criteria","combined");
x.t("criteria","sections");
x.t("criteria","specified");
x.t("criteria","lines");
x.t("criteria","specifying");
x.t("criteria","packet");
x.t("deleted","trace");
x.t("ranges","broadcast/multicast");
x.t("ranges","filtering");
x.t("ranges","note");
x.t("covered","u.s");
x.t("imports","nearly");
x.t("imports","webworks_writedivopen");
x.t("contains","sections");
x.t("specify","protocols");
x.t("specify","source");
x.t("specify","frame");
x.t("specify","filter");
x.t("specify","direction");
x.t("specify","whether");
x.t("flows","included");
x.t("flows","trace");
x.t("flows","capture");
x.t("slash","notation");
x.t("matching","address");
x.t("comma-separated","list");
x.t("patents","complete");
}
