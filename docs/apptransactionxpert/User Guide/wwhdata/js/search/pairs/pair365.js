function FileData_Pairs(x)
{
x.t("complex","application");
x.t("mainframe","job");
x.t("mainframe","attribute");
x.t("mainframe","models");
x.t("mainframe","jobs");
x.t("example","job");
x.t("example","set");
x.t("example","parallel");
x.t("example","consider");
x.t("example","job.process");
x.t("example","figure");
x.t("example","multithreaded");
x.t("example","transaction");
x.t("example","following");
x.t("four","optional");
x.t("passed","information");
x.t("particularly","useful");
x.t("calibrating","server");
x.t("equal","exec_units");
x.t("equal","total_exec_units");
x.t("(3/10)","thread");
x.t("method","four");
x.t("method","method");
x.t("method","create");
x.t("method","creating");
x.t("method","easier");
x.t("method","process");
x.t("method","transaction");
x.t("method","object");
x.t("percentages","total");
x.t("considerations","creating");
x.t("fractions","dependency");
x.t("simultaneously","run");
x.t("spawned","fraction");
x.t("rather","used");
x.t("modeling","complex");
x.t("independently","part");
x.t("cpus","using");
x.t("within","transaction");
x.t("implement","however");
x.t("shown","following");
x.t("description","callback_function");
x.t("create","arbitrary");
x.t("create","process");
x.t("describes","important");
x.t("callback","functions");
x.t("callback","function");
x.t("home","back");
x.t("arguments","callback");
x.t("arguments","arguments");
x.t("arguments","specified");
x.t("arguments","split");
x.t("arguments","job.process");
x.t("completion","example");
x.t("completion","total");
x.t("completion","single");
x.t("u.s","patents");
x.t("user","guide");
x.t("job","method");
x.t("job","rather");
x.t("job","shown");
x.t("job","execute");
x.t("job","multiple");
x.t("job","execution");
x.t("job","want");
x.t("job","sum");
x.t("job","parallel");
x.t("job","processed");
x.t("job","definition");
x.t("job","shaded");
x.t("job","ends");
x.t("job","dependency");
x.t("job","partially");
x.t("job","three");
x.t("job","python");
x.t("job","start_time");
x.t("job","processing");
x.t("job","begins");
x.t("job","executed");
x.t("job","completes");
x.t("job","triggered");
x.t("job","exec_units");
x.t("job","job.process");
x.t("job","separate");
x.t("job","executes");
x.t("job","note");
x.t("job","run");
x.t("job","following");
x.t("job","class");
x.t("job","associated");
x.t("job","contains");
x.t("execute","simultaneously");
x.t("execute","total");
x.t("execute","machine");
x.t("execute","parallel");
x.t("execute","three");
x.t("scripts","server_job");
x.t("scripts","entire");
x.t("set","start");
x.t("shows","example");
x.t("shows","representation");
x.t("notices","section");
x.t("support","center");
x.t("callback_data","arguments");
x.t("callback_data","tuple");
x.t("callback_data","exec_units");
x.t("type","description");
x.t("type","none");
x.t("times","job");
x.t("times","specified");
x.t("times","magnitude");
x.t("times","used");
x.t("time","job");
x.t("time","secs");
x.t("calls","job");
x.t("calls","total");
x.t("calls","executed");
x.t("calls","made");
x.t("calls","job.process");
x.t("calls","specify");
x.t("editing","designing");
x.t("bound","method");
x.t("total","job");
x.t("total","units");
x.t("total","number");
x.t("total","processing");
x.t("multiple","cpus");
x.t("multiple","calls");
x.t("multiple","independent");
x.t("multiple","threads");
x.t("execution","figure");
x.t("sections","describe");
x.t("however","flexible");
x.t("self.thread_completion_callback","args_thread1");
x.t("self.thread_completion_callback","args_thread2");
x.t("self.thread_completion_callback","args_thread3");
x.t("partial","completion");
x.t("simulating","dependencies");
x.t("back","top");
x.t("start","time");
x.t("details","method");
x.t("single","thread");
x.t("advanced","server");
x.t("want","process");
x.t("new","messages");
x.t("usually","occurs");
x.t("usually","defined");
x.t("block","transaction");
x.t("(2/10)","thread");
x.t("top","2013");
x.t("areas","represent");
x.t("list","describes");
x.t("parallel","job");
x.t("parallel","processing");
x.t("parallel","processes");
x.t("parallel","figure");
x.t("parallel","following");
x.t("parallel","threads");
x.t("complete","job");
x.t("complete","patent");
x.t("sum","exec_units");
x.t("sum","exec_");
x.t("during","job");
x.t("machine","multiple");
x.t("gui-based","method");
x.t("guide","editing");
x.t("exceed","total_exec_units");
x.t("increase","usually");
x.t("units","equal");
x.t("units","execute");
x.t("units","job");
x.t("specified","passed");
x.t("specified","job");
x.t("specified","python");
x.t("specified","called");
x.t("specified","transaction");
x.t("specified","used");
x.t("specified","remaining");
x.t("processed","single");
x.t("processed","using");
x.t("definition","thread");
x.t("definition","although");
x.t("shaded","areas");
x.t("faster","job");
x.t("programmable","logic");
x.t("creating","processing");
x.t("performance","increase");
x.t("ends","job.process");
x.t("ends","threads");
x.t("argument","type");
x.t("argument","process");
x.t("part","(s)");
x.t("part","server");
x.t("dependency","words");
x.t("dependency","longer");
x.t("dependency","tier");
x.t("dependency","encountered");
x.t("none","example");
x.t("programmer","may");
x.t("useful","calibrating");
x.t("callback_","data");
x.t("whiteboard","modeling");
x.t("whiteboard","create");
x.t("whiteboard","advanced");
x.t("whiteboard","parallel");
x.t("whiteboard","dependency");
x.t("whiteboard","python");
x.t("whiteboard","message");
x.t("whiteboard","model");
x.t("whiteboard","server");
x.t("server_job","syntax");
x.t("server_job","class");
x.t("makes","given");
x.t("intentional","following");
x.t("partially","return");
x.t("26-10","example");
x.t("scripting","method");
x.t("scripting","parallel");
x.t("scripting","split");
x.t("scripting","cannot");
x.t("scripting","transaction");
x.t("scripting","using");
x.t("entire","job");
x.t("three","parallel");
x.t("three","job.process");
x.t("three","threads");
x.t("thread","equal");
x.t("thread","spawned");
x.t("thread","partial");
x.t("thread","complete");
x.t("thread","programmer");
x.t("thread","makes");
x.t("thread","first");
x.t("thread","processing");
x.t("thread","job.process");
x.t("thread","defined");
x.t("thread","note");
x.t("thread","significant");
x.t("thread","following");
x.t("thread","subsequent");
x.t("thread","dependencies");
x.t("callback_func","python");
x.t("remain","constant");
x.t("relative","percentages");
x.t("attribute","absolute");
x.t("patent","notice");
x.t("functions","callback");
x.t("functions","exec_units");
x.t("functions","using");
x.t("divided","total_exec_units");
x.t("legal","notices");
x.t("logic","scripts");
x.t("logic","python");
x.t("python","scripts");
x.t("python","scripting");
x.t("python","function");
x.t("python","script");
x.t("independent","threads");
x.t("equivalent","fraction");
x.t("notice","legal");
x.t("syntax","job.process");
x.t("self.sim_time","process");
x.t("representation","server");
x.t("occurs","parallel");
x.t("occurs","previous");
x.t("absolute","value");
x.t("start_time","self.sim_time");
x.t("start_time","thread1");
x.t("start_time","thread2");
x.t("start_time","thread3");
x.t("split","job");
x.t("executing","single");
x.t("long","result");
x.t("first","dependency");
x.t("reason","python");
x.t("messages","dependencies");
x.t("number","units");
x.t("number","threads");
x.t("processing","job");
x.t("processing","times");
x.t("processing","time");
x.t("processing","during");
x.t("processing","parallel");
x.t("processing","completes");
x.t("processing","multithreaded");
x.t("function","block");
x.t("function","specified");
x.t("function","information");
x.t("function","called");
x.t("(5/10)","thread");
x.t("magnitude","long");
x.t("2013","riverbed");
x.t("processes","specified");
x.t("processes","server");
x.t("specifies","number");
x.t("specifies","exec_units");
x.t("may","e.g");
x.t("may","covered");
x.t("posix","threads");
x.t("particular","job");
x.t("cannot","incorporate");
x.t("represents","thread");
x.t("editor","example");
x.t("editor","transaction");
x.t("editor","specify");
x.t("words","specify");
x.t("software","may");
x.t("begins","executing");
x.t("ways","create");
x.t("arbitrary","number");
x.t("args_thread1","start_time");
x.t("args_thread1","args_thread2");
x.t("section","riverbed");
x.t("tuple","arguments");
x.t("args_thread2","start_time");
x.t("args_thread2","args_thread3");
x.t("secs","(3/10)");
x.t("secs","total");
x.t("secs","(2/10)");
x.t("secs","(5/10)");
x.t("important","considerations");
x.t("works","python");
x.t("args_thread3","start_time");
x.t("args_thread3","100");
x.t("executed","completion");
x.t("executed","thread");
x.t("designing","applications");
x.t("abstract","processes");
x.t("completes","usually");
x.t("completes","faster");
x.t("completes","callback_func");
x.t("return","type");
x.t("self.job.process","self.thread_completion_callback");
x.t("term","thread");
x.t("26-7","server");
x.t("level","programmable");
x.t("100","details");
x.t("throughout","calls");
x.t("previous","job.process");
x.t("26-8","example");
x.t("message","editor");
x.t("given","percentage");
x.t("triggered","single");
x.t("e.g","posix");
x.t("incorporate","level");
x.t("together","represent");
x.t("26-9","example");
x.t("actual","processing");
x.t("exec_units","exceed");
x.t("exec_units","specified");
x.t("exec_units","argument");
x.t("exec_units","divided");
x.t("exec_units","total_exec_units");
x.t("exec_units","integer");
x.t("(optional)","callback_data");
x.t("(optional)","argument");
x.t("made","job");
x.t("consider","thread");
x.t("longer","valid");
x.t("job.process","method");
x.t("job.process","user");
x.t("job.process","calls");
x.t("job.process","thread");
x.t("job.process","abstract");
x.t("job.process","job.process");
x.t("job.process","call");
x.t("job.process","callback_function");
x.t("15,60","thread");
x.t("technology","software");
x.t("easier","implement");
x.t("value","processing");
x.t("total_exec_units","example");
x.t("total_exec_units","arguments");
x.t("total_exec_units","job");
x.t("total_exec_units","remain");
x.t("total_exec_units","job.process");
x.t("total_exec_units","total_exec_units");
x.t("total_exec_units","executes");
x.t("constant","throughout");
x.t("figure","shows");
x.t("figure","26-10");
x.t("figure","26-7");
x.t("figure","26-8");
x.t("figure","26-9");
x.t("figure","figure");
x.t("figure","above");
x.t("process","job");
x.t("process","parallel");
x.t("process","thread");
x.t("process","multithreaded");
x.t("process","server");
x.t("generate","new");
x.t("(s)","job");
x.t("although","strictly");
x.t("multithreaded","job");
x.t("multithreaded","jobs");
x.t("multithreaded","server");
x.t("represent","parallel");
x.t("represent","entire");
x.t("models","create");
x.t("tier","represents");
x.t("encountered","intentional");
x.t("valid","server");
x.t("separate","thread");
x.t("context","term");
x.t("script","calls");
x.t("script","parallel");
x.t("script","transaction");
x.t("script","dynamically");
x.t("information","callback");
x.t("optional","arguments");
x.t("data","15,60");
x.t("data","30,60");
x.t("defined","part");
x.t("defined","function");
x.t("flexible","python");
x.t("result","equivalent");
x.t("application","behavior");
x.t("called","job");
x.t("called","callback_data");
x.t("above","job");
x.t("transaction","whiteboard");
x.t("integer","specifies");
x.t("executes","completion");
x.t("executes","job");
x.t("note","multiple");
x.t("note","processing");
x.t("jobs","within");
x.t("jobs","two");
x.t("jobs","following");
x.t("two","ways");
x.t("two","threads");
x.t("fraction","job");
x.t("fraction","total");
x.t("percentage","total");
x.t("applications","transaction");
x.t("typically","completes");
x.t("significant","performance");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("call","ends");
x.t("call","occurs");
x.t("call","specifies");
x.t("call","exec_units");
x.t("exec_","units");
x.t("model","execute");
x.t("model","(optional)");
x.t("run","independently");
x.t("run","parallel");
x.t("following","sections");
x.t("following","list");
x.t("following","three");
x.t("following","reason");
x.t("following","figure");
x.t("individual","threads");
x.t("used","simulating");
x.t("used","compute");
x.t("used","simulate");
x.t("compute","relative");
x.t("class","server_job");
x.t("class","job.process");
x.t("callback_function","callback_data");
x.t("callback_function","bound");
x.t("callback_function","callback_");
x.t("using","parallel");
x.t("using","gui-based");
x.t("using","scripting");
x.t("using","python");
x.t("using","exec_units");
x.t("using","transaction");
x.t("remaining","job.process");
x.t("subsequent","job.process");
x.t("dependencies","home");
x.t("dependencies","together");
x.t("dependencies","pre-computation");
x.t("pre-computation","fractions");
x.t("behavior","logic");
x.t("without","using");
x.t("simulate","actual");
x.t("associated","transaction");
x.t("covered","u.s");
x.t("thread1","self.job.process");
x.t("describe","two");
x.t("30,60","thread");
x.t("thread2","self.job.process");
x.t("strictly","definition");
x.t("server","mainframe");
x.t("server","job");
x.t("server","processing");
x.t("object","python");
x.t("contains","(optional)");
x.t("threads","example");
x.t("threads","particularly");
x.t("threads","execute");
x.t("threads","parallel");
x.t("threads","particular");
x.t("threads","args_thread1");
x.t("threads","works");
x.t("threads","figure");
x.t("threads","process");
x.t("threads","context");
x.t("threads","typically");
x.t("threads","run");
x.t("threads","using");
x.t("threads","without");
x.t("thread3","self.job.process");
x.t("specify","processing");
x.t("specify","individual");
x.t("dynamically","generate");
x.t("patents","complete");
}
