function FileData_Pairs(x)
{
x.t("complex","multi-tier");
x.t("example","capture");
x.t("example","three-tier");
x.t("example","first");
x.t("example","client");
x.t("example","consider");
x.t("hits","server\u2019s");
x.t("four","strategies");
x.t("tier\u2019s","processing");
x.t("capturing","traffic");
x.t("capturing","client");
x.t("capturing","multi-tier");
x.t("capturing","lab");
x.t("capturing","application");
x.t("capturing","applications");
x.t("method","capturing");
x.t("method","recommend");
x.t("method","capture");
x.t("method","focusing");
x.t("available","solutions");
x.t("advantages","model");
x.t("simultaneously","captures");
x.t("simultaneously","necessary");
x.t("simultaneously","know");
x.t("simultaneously","apptransaction");
x.t("simultaneously","hitting");
x.t("simultaneously","created");
x.t("simultaneously","run");
x.t("rather","estimates");
x.t("proxy","firewalls");
x.t("receives","multiple");
x.t("receives","client\u2019s");
x.t("receives","transaction");
x.t("willing","temporary");
x.t("files","import");
x.t("files","captured");
x.t("files","manually");
x.t("modeling","multi-tier");
x.t("low-latency","network");
x.t("captures","filter");
x.t("captures","contain");
x.t("captures","simultaneous");
x.t("shown","following");
x.t("clear","channel");
x.t("within","apptransaction");
x.t("installed","record");
x.t("installed","different");
x.t("estimate","arrival");
x.t("estimate","information");
x.t("estimate","bandwidth");
x.t("(nat)","tiers");
x.t("create","temporary");
x.t("create","accurate");
x.t("effects","users");
x.t("doing","however");
x.t("always","specify");
x.t("having","apptransaction");
x.t("home","back");
x.t("recommend","start");
x.t("u.s","patents");
x.t("user","guide");
x.t("creates","unified");
x.t("estimates","actual");
x.t("locations","capturing");
x.t("locations","user");
x.t("locations","usually");
x.t("locations","capture");
x.t("locations","need");
x.t("locations","import");
x.t("locations","information");
x.t("locations","using");
x.t("unified","model");
x.t("arrivals","departures");
x.t("uses","specified");
x.t("remote","tiers");
x.t("varieties","application");
x.t("last","method");
x.t("calculates","rather");
x.t("necessary","create");
x.t("necessary","synchronize");
x.t("potentially","simple");
x.t("notices","section");
x.t("support","center");
x.t("traces","automatically");
x.t("traces","capture");
x.t("traces","high-bandwidth");
x.t("traces","common");
x.t("traces","contain");
x.t("traces","successfully");
x.t("traces","advantageous");
x.t("traces","apptransaction");
x.t("traces","hosts");
x.t("traces","import");
x.t("traces","captured");
x.t("traces","transaction");
x.t("traces","manually");
x.t("traces","therefore");
x.t("times","remote");
x.t("times","tiers");
x.t("type","56k");
x.t("distributes","requests");
x.t("change","simple");
x.t("merges","capture");
x.t("trace","assume");
x.t("trace","advantage");
x.t("trace","match");
x.t("trace","greater");
x.t("trace","apptransaction");
x.t("trace","data");
x.t("packets","travel");
x.t("packets","steps");
x.t("packets","apptransaction");
x.t("packets","packet");
x.t("time","frame");
x.t("time","multi-capture");
x.t("time","results");
x.t("time","zones");
x.t("response","client");
x.t("distribute","requests");
x.t("initially","receives");
x.t("multiple","files");
x.t("multiple","locations");
x.t("multiple","network");
x.t("multiple","web");
x.t("multiple","client");
x.t("multiple","load-balanced");
x.t("multiple","hosts");
x.t("multiple","packet");
x.t("regardless","number");
x.t("however","effects");
x.t("however","traffic");
x.t("however","apptransaction");
x.t("however","less");
x.t("however","synchronize");
x.t("identify","bottlenecks");
x.t("down","time");
x.t("application-capture","features");
x.t("automatically","capturing");
x.t("automatically","varieties");
x.t("automatically","synchronizes");
x.t("automatically","determine");
x.t("automatically","cannot");
x.t("automatically","match");
x.t("channel","application");
x.t("back","top");
x.t("single","tier");
x.t("single","packet");
x.t("start","capture");
x.t("link","type");
x.t("link","capture");
x.t("want","capture");
x.t("want","compare");
x.t("servers","distribute");
x.t("servers","increase");
x.t("servers","test");
x.t("servers","sometimes");
x.t("servers","generate");
x.t("servers","reliably");
x.t("servers","except");
x.t("seamlessly","distribute");
x.t("new","port");
x.t("departures","hosts");
x.t("includes","traffic");
x.t("frame","traffic");
x.t("synchronizes","packet");
x.t("usually","estimate");
x.t("desirable","having");
x.t("top","2013");
x.t("capture","locations");
x.t("capture","agents");
x.t("capture","traffic");
x.t("capture","requirements");
x.t("capture","methods");
x.t("capture","app");
x.t("capture","three-tier");
x.t("capture","entire");
x.t("capture","three");
x.t("capture","rsv_server");
x.t("capture","client");
x.t("capture","primary");
x.t("capture","import");
x.t("capture","multi-tier");
x.t("capture","data");
x.t("capture","host");
x.t("capture","agent");
x.t("capture","application");
x.t("capture","applications");
x.t("capture","cleanly");
x.t("multi-capture","task");
x.t("multi-capture","import");
x.t("multi-capture","transaction");
x.t("able","merge");
x.t("need","specify");
x.t("http","port");
x.t("web_client","rsv_server");
x.t("slowest","link");
x.t("during","capture");
x.t("during","network");
x.t("during","off-hours");
x.t("during","apptransaction");
x.t("benefit","back-end");
x.t("complete","patent");
x.t("guide","capturing");
x.t("network","locations");
x.t("network","down");
x.t("network","traffic");
x.t("network","recommended");
x.t("network","provides");
x.t("network","segments");
x.t("network","address");
x.t("network","suppose");
x.t("network","advantage");
x.t("network","middle");
x.t("network","connections");
x.t("network","pathprobe");
x.t("wan","complex");
x.t("wan","capture");
x.t("wan","recommended");
x.t("wan","app");
x.t("agents","simultaneously");
x.t("agents","installed");
x.t("agents","recorded");
x.t("agents","apptransaction");
x.t("high-bandwidth","low-latency");
x.t("filter","web_client");
x.t("filter","during");
x.t("filter","rsv_server");
x.t("filter","tiers");
x.t("filter","firewalls");
x.t("results","last");
x.t("results","automatically");
x.t("results","results");
x.t("results","clean");
x.t("assume","client");
x.t("simple","technique");
x.t("simple","changing");
x.t("increase","temporarily");
x.t("traffic","example");
x.t("traffic","capturing");
x.t("traffic","simultaneously");
x.t("traffic","packets");
x.t("traffic","multiple");
x.t("traffic","overview");
x.t("traffic","stop");
x.t("traffic","first");
x.t("traffic","importing");
x.t("traffic","middle");
x.t("traffic","client");
x.t("traffic","apptransaction");
x.t("traffic","data");
x.t("traffic","information");
x.t("traffic","captured");
x.t("traffic","two");
x.t("traffic","associated");
x.t("traffic","visible");
x.t("overview","capturing");
x.t("features","easily");
x.t("remember","following");
x.t("recommended","method");
x.t("sure","client\u2019s");
x.t("end-to-end","capture");
x.t("specified","bandwidth");
x.t("true","hosts");
x.t("virtually","application");
x.t("circumstances","production");
x.t("requirements","remember");
x.t("test","client");
x.t("analyze","particular");
x.t("analyze","remaining");
x.t("resulting","packet");
x.t("common","time");
x.t("common","packets");
x.t("common","traffic");
x.t("creating","multiple");
x.t("obtain","traffic");
x.t("enables","identify");
x.t("enables","model");
x.t("analyzer","model");
x.t("manual","merge");
x.t("stop","capture");
x.t("accuracy","capture");
x.t("handles","types");
x.t("part","application");
x.t("component","delay");
x.t("filtering","unrelated");
x.t("provides","advantage");
x.t("man","wan");
x.t("methods","analyze");
x.t("methods","combine");
x.t("determine","common");
x.t("determine","cannot");
x.t("three-tier","application");
x.t("three-tier","transaction");
x.t("app","server");
x.t("off-hours","configure");
x.t("standard","port");
x.t("combine","methods");
x.t("records","packets");
x.t("segments","wan");
x.t("segments","import");
x.t("address","capture");
x.t("address","depending");
x.t("address","translation");
x.t("auto-detects","latency");
x.t("partially","captures");
x.t("web","servers");
x.t("web","server");
x.t("easiest","capture");
x.t("record","activity");
x.t("impossible","capture");
x.t("entire","multi-tier");
x.t("realistic","accurate");
x.t("inspection","firewalls");
x.t("contain","packets");
x.t("contain","common");
x.t("contain","different");
x.t("three","tiers");
x.t("second","tiers");
x.t("second","several");
x.t("second","tier");
x.t("temporarily","distribute");
x.t("temporarily","filter");
x.t("patent","notice");
x.t("request","filter");
x.t("request","app");
x.t("request","server");
x.t("solution","two");
x.t("legal","notices");
x.t("travel","host");
x.t("sometimes","configure");
x.t("notice","legal");
x.t("especially","true");
x.t("stateful/stateless","inspection");
x.t("know","bandwidth");
x.t("busy","network");
x.t("suppose","want");
x.t("suppose","capture");
x.t("balancers","automatically");
x.t("drawback","loads");
x.t("loads","servers");
x.t("client\u2019s","traffic");
x.t("client\u2019s","request");
x.t("delay","second");
x.t("delay","changes");
x.t("delay","application");
x.t("recorded","application");
x.t("long","captured");
x.t("minimum","bandwidth");
x.t("issues","request");
x.t("first","method");
x.t("first","second");
x.t("first","two");
x.t("activity","actual");
x.t("number","tiers");
x.t("number","configuration");
x.t("importing","multiple");
x.t("importing","packet");
x.t("rsv_server","example");
x.t("rsv_server","test");
x.t("rsv_server","standard");
x.t("rsv_server","address");
x.t("rsv_server","rsv_server");
x.t("rsv_server","database_server");
x.t("rsv_server","using");
x.t("rsv_server","load");
x.t("processing","delay");
x.t("collocated","wan");
x.t("determining","network");
x.t("technique","benefit");
x.t("2013","riverbed");
x.t("exchange","time");
x.t("exchange","single");
x.t("exchange","enables");
x.t("exchange","different");
x.t("exchange","created");
x.t("different","packets");
x.t("different","time");
x.t("different","capture");
x.t("different","network");
x.t("tiers","capturing");
x.t("tiers","multi-capture");
x.t("tiers","sure");
x.t("tiers","obtain");
x.t("tiers","part");
x.t("tiers","collocated");
x.t("tiers","event");
x.t("tiers","largest");
x.t("tiers","import");
x.t("tiers","result");
x.t("tiers","additionally");
x.t("tiers","using");
x.t("tiers","including");
x.t("advantage","doing");
x.t("advantage","importing");
x.t("cannot","capture");
x.t("cannot","match");
x.t("cannot","merge");
x.t("cannot","connect");
x.t("measuring","network");
x.t("middle","tier\u2019s");
x.t("middle","tier");
x.t("evenly","database");
x.t("particular","application");
x.t("software","may");
x.t("may","covered");
x.t("solutions","capturing");
x.t("requests","multiple");
x.t("requests","servers");
x.t("requests","during");
x.t("requests","web");
x.t("requests","evenly");
x.t("requests","hitting");
x.t("requests","per");
x.t("interaction","first");
x.t("realism","accuracy");
x.t("match","example");
x.t("match","traffic");
x.t("match","merge");
x.t("types","firewalls");
x.t("firewalls","however");
x.t("firewalls","stateful/stateless");
x.t("firewalls","tiers");
x.t("changes","significantly");
x.t("section","riverbed");
x.t("transmission","times");
x.t("56k","know");
x.t("initial","strategy");
x.t("single-capture","task");
x.t("task","uses");
x.t("task","includes");
x.t("client","hits");
x.t("client","app");
x.t("client","request");
x.t("client","issues");
x.t("client","requests");
x.t("client","figure");
x.t("client","tier");
x.t("client","separated");
x.t("client","connect");
x.t("client","server");
x.t("steps","importing");
x.t("steps","apptransaction");
x.t("steps","captured");
x.t("load-balanced","web");
x.t("located","different");
x.t("often","easiest");
x.t("often","good");
x.t("primary","drawback");
x.t("given","multiple");
x.t("environment","capture");
x.t("environment","during");
x.t("environment","tiers");
x.t("environment","historically");
x.t("environment","load");
x.t("successfully","apptransaction");
x.t("successfully","even");
x.t("database","servers");
x.t("greater","realism");
x.t("greater","flexibility");
x.t("actual","packet");
x.t("advantageous","capture");
x.t("advantageous","following");
x.t("event","synchronize");
x.t("apptransaction","xpert");
x.t("consider","following");
x.t("less","desirable");
x.t("hitting","servers");
x.t("hitting","middle");
x.t("changing","http");
x.t("database_server","often");
x.t("latency","capture");
x.t("latency","values");
x.t("departure","times");
x.t("synchronize","files");
x.t("synchronize","clocks");
x.t("synchronize","packet");
x.t("configuration","change");
x.t("configuration","filter");
x.t("challenging","four");
x.t("categorizes","remaining");
x.t("technology","software");
x.t("hosts","single-capture");
x.t("hosts","located");
x.t("hosts","given");
x.t("hosts","model");
x.t("hosts","separated");
x.t("measurements","network");
x.t("3-1","example");
x.t("3-1","receives");
x.t("figure","client");
x.t("figure","3-1");
x.t("responds","app");
x.t("several","strategies");
x.t("specific","address");
x.t("depending","load");
x.t("largest","component");
x.t("focusing","client-side");
x.t("import","within");
x.t("import","packets");
x.t("import","multiple");
x.t("import","traffic");
x.t("import","resulting");
x.t("import","advantageous");
x.t("import","data");
x.t("import","packet");
x.t("connections","pathprobe");
x.t("temporary","clear");
x.t("temporary","potentially");
x.t("generate","clean");
x.t("historically","apptransaction");
x.t("multi-tier","application");
x.t("multi-tier","applications");
x.t("tier","receives");
x.t("tier","initially");
x.t("tier","want");
x.t("tier","analyze");
x.t("tier","app");
x.t("tier","often");
x.t("tier","synchronize");
x.t("tier","sees");
x.t("sees","traffic");
x.t("unrelated","traffic");
x.t("reliably","lab");
x.t("arrival","departure");
x.t("good","initial");
x.t("client-side","traffic");
x.t("data","creates");
x.t("data","multiple");
x.t("data","however");
x.t("data","even");
x.t("information","capturing");
x.t("information","always");
x.t("information","necessary");
x.t("information","manual");
x.t("information","measuring");
x.t("information","information");
x.t("host","capture");
x.t("host","especially");
x.t("host","port");
x.t("configure","load");
x.t("xpert","calculates");
x.t("xpert","merges");
x.t("xpert","automatically");
x.t("xpert","multi-capture");
x.t("xpert","able");
x.t("xpert","handles");
x.t("xpert","determine");
x.t("xpert","auto-detects");
x.t("xpert","cannot");
x.t("xpert","categorizes");
x.t("xpert","import");
x.t("xpert","users");
x.t("xpert","itself");
x.t("xpert","merge");
x.t("agent","installed");
x.t("agent","records");
x.t("result","realistic");
x.t("production","environment");
x.t("clocks","capture");
x.t("lab","environment");
x.t("strategy","enables");
x.t("application","example");
x.t("application","proxy");
x.t("application","multiple");
x.t("application","regardless");
x.t("application","however");
x.t("application","traffic");
x.t("application","busy");
x.t("application","suppose");
x.t("application","delay");
x.t("application","determining");
x.t("application","exchange");
x.t("application","client");
x.t("application","greater");
x.t("application","consider");
x.t("application","host");
x.t("application","production");
x.t("application","transaction");
x.t("application","using");
x.t("captured","simultaneously");
x.t("captured","multiple");
x.t("captured","app");
x.t("captured","different");
x.t("captured","computers");
x.t("values","estimate");
x.t("significantly","home");
x.t("described","manual");
x.t("simultaneous","packet");
x.t("port","seamlessly");
x.t("port","during");
x.t("port","rsv_server");
x.t("port","number");
x.t("transaction","shown");
x.t("transaction","multiple");
x.t("transaction","analyzer");
x.t("transaction","filtering");
x.t("transaction","requests");
x.t("two","files");
x.t("two","captures");
x.t("two","tiers");
x.t("users","willing");
x.t("users","simultaneously");
x.t("easily","capture");
x.t("applications","impossible");
x.t("applications","busy");
x.t("applications","environment");
x.t("applications","apptransaction");
x.t("zones","long");
x.t("based","link");
x.t("work","partially");
x.t("strategies","capture");
x.t("server\u2019s","specific");
x.t("itself","challenging");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("packet","arrivals");
x.t("packet","traces");
x.t("packet","trace");
x.t("packet","filter");
x.t("packet","transmission");
x.t("created","simultaneously");
x.t("created","multiple");
x.t("created","single");
x.t("accurate","model");
x.t("merge","results");
x.t("merge","successfully");
x.t("merge","packet");
x.t("merge","following");
x.t("merge","synchronizing");
x.t("model","capture");
x.t("model","virtually");
x.t("model","steps");
x.t("model","apptransaction");
x.t("model","application");
x.t("model","created");
x.t("model","following");
x.t("following","method");
x.t("following","capturing");
x.t("following","advantages");
x.t("following","circumstances");
x.t("following","creating");
x.t("following","three-tier");
x.t("following","figure");
x.t("run","application");
x.t("pathprobe","available");
x.t("pathprobe","estimate");
x.t("pathprobe","pathprobe");
x.t("separated","high-bandwidth");
x.t("separated","wan");
x.t("separated","man");
x.t("except","rsv_server");
x.t("using","application-capture");
x.t("using","new");
x.t("using","capture");
x.t("using","traffic");
x.t("additionally","apptransaction");
x.t("connect","rsv_server");
x.t("remaining","tiers");
x.t("manually","however");
x.t("manually","apptransaction");
x.t("manually","import");
x.t("manually","described");
x.t("translation","(nat)");
x.t("ideal","solution");
x.t("per","second");
x.t("compare","results");
x.t("therefore","merge");
x.t("forwards","response");
x.t("forwards","request");
x.t("merged","model");
x.t("load","balancers");
x.t("load","balancer");
x.t("balancer","create");
x.t("balancer","distributes");
x.t("balancer","temporarily");
x.t("balancer","configuration");
x.t("cleanly","production");
x.t("associated","client");
x.t("covered","u.s");
x.t("bandwidth","slowest");
x.t("bandwidth","different");
x.t("bandwidth","latency");
x.t("bandwidth","measurements");
x.t("bandwidth","based");
x.t("bandwidth","bandwidth");
x.t("flexibility","modeling");
x.t("synchronizing","packet");
x.t("including","packet");
x.t("back-end","tier");
x.t("computers","high-bandwidth");
x.t("visible","packet");
x.t("even","network");
x.t("even","cannot");
x.t("produce","merged");
x.t("bottlenecks","interaction");
x.t("specify","minimum");
x.t("specify","information");
x.t("server","capture");
x.t("server","app");
x.t("server","web");
x.t("server","responds");
x.t("server","figure");
x.t("server","import");
x.t("server","tier");
x.t("server","work");
x.t("server","separated");
x.t("server","ideal");
x.t("server","forwards");
x.t("server","produce");
x.t("server","server");
x.t("clean","captures");
x.t("clean","end-to-end");
x.t("patents","complete");
}
