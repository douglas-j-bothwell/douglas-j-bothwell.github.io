function FileData_Pairs(x)
{
x.t("four","different");
x.t("interfaces","accelerator");
x.t("capturing","near");
x.t("capturing","cisco");
x.t("capturing","wan");
x.t("capturing","application");
x.t("capturing","accelerators");
x.t("shown","following");
x.t("captures","capturing");
x.t("captures","near");
x.t("captures","workflow");
x.t("captures","accelerators");
x.t("required","traffic");
x.t("home","back");
x.t("u.s","patents");
x.t("user","guide");
x.t("descriptions","home");
x.t("descriptions","selecting");
x.t("pair","synchronous");
x.t("locations","however");
x.t("locations","able");
x.t("locations","lan");
x.t("locations","devices");
x.t("11-1","required");
x.t("notices","section");
x.t("support","center");
x.t("type","accelerator");
x.t("indirect","captures");
x.t("near","wan");
x.t("near","accelerators");
x.t("trace","case");
x.t("wan-accelerated","environment");
x.t("however","depending");
x.t("dual-interface","captures");
x.t("back","top");
x.t("includes","following");
x.t("top","2013");
x.t("capture","four");
x.t("capture","traffic");
x.t("capture","fewer");
x.t("capture","application");
x.t("capture","two");
x.t("capture","lan");
x.t("need","capture");
x.t("able","capture");
x.t("cisco","riverbed");
x.t("complete","patent");
x.t("guide","wan");
x.t("wan","traffic");
x.t("wan","accelerators");
x.t("network","configuration");
x.t("traffic","four");
x.t("traffic","wan-accelerated");
x.t("traffic","client");
x.t("traffic","accelerators");
x.t("traffic","packet");
x.t("traffic","two-tier");
x.t("traffic","server");
x.t("analyze","application");
x.t("synchronous","accelerators");
x.t("direct","captures");
x.t("segment","application");
x.t("patent","notice");
x.t("legal","notices");
x.t("notice","legal");
x.t("intermediate","segment");
x.t("means","analyze");
x.t("side","wan");
x.t("side","lan");
x.t("fewer","locations");
x.t("accelerator","single-");
x.t("accelerator","devices");
x.t("2013","riverbed");
x.t("tiers","intermediate");
x.t("different","locations");
x.t("workflow","descriptions");
x.t("software","may");
x.t("may","covered");
x.t("section","includes");
x.t("section","riverbed");
x.t("client","wan");
x.t("client","side");
x.t("enable","capture");
x.t("adds","two");
x.t("environment","capturing");
x.t("environment","shown");
x.t("environment","user");
x.t("environment","pair");
x.t("environment","capture");
x.t("environment","section");
x.t("configuration","specific");
x.t("technology","software");
x.t("figure","11-1");
x.t("figure","need");
x.t("depending","network");
x.t("specific","type");
x.t("selecting","interfaces");
x.t("single-","dual-interface");
x.t("application","traffic");
x.t("application","environment");
x.t("application","transaction");
x.t("application","wan-optimized");
x.t("captured","client");
x.t("captured","server");
x.t("case","capture");
x.t("themselves","figure");
x.t("two","locations");
x.t("two","tiers");
x.t("transaction","means");
x.t("topics","direct");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("riverbed","accelerators");
x.t("accelerators","capturing");
x.t("accelerators","indirect");
x.t("accelerators","direct");
x.t("accelerators","adds");
x.t("accelerators","captured");
x.t("packet","trace");
x.t("following","figure");
x.t("following","topics");
x.t("two-tier","application");
x.t("wan-optimized","environment");
x.t("covered","u.s");
x.t("lan","wan");
x.t("lan","traffic");
x.t("server","capture");
x.t("server","side");
x.t("devices","enable");
x.t("devices","themselves");
x.t("patents","complete");
}
