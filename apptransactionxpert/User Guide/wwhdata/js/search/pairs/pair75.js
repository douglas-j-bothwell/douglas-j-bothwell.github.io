function FileData_Pairs(x)
{
x.t("capturing","switches");
x.t("capturing","near");
x.t("capturing","traffic");
x.t("capturing","directly");
x.t("capturing","lan-side");
x.t("capturing","application");
x.t("available","router");
x.t("provide","connectivity");
x.t("study","traffic");
x.t("switches","end");
x.t("switches","figure");
x.t("switches","configure");
x.t("captures","necessary");
x.t("captures","near");
x.t("captures","need");
x.t("captures","accelerator");
x.t("captures","workflow");
x.t("captures","accelerators");
x.t("captures","relevant");
x.t("within","lan");
x.t("shown","figure");
x.t("create","agent");
x.t("required","capture");
x.t("key","concept");
x.t("always","need");
x.t("home","back");
x.t("u.s","patents");
x.t("user","guide");
x.t("descriptions","following");
x.t("set","capture");
x.t("set","cannot");
x.t("necessary","cannot");
x.t("notices","section");
x.t("support","center");
x.t("indirect","captures");
x.t("indirect","capture");
x.t("near","switches");
x.t("near","wan");
x.t("near","accelerators");
x.t("type","agent/sniffer/analyzer");
x.t("traces","directly");
x.t("wan-accelerated","environment");
x.t("back","top");
x.t("11-7","indirect");
x.t("want","study");
x.t("includes","traffic");
x.t("11-8","capturing");
x.t("11-8","option");
x.t("top","2013");
x.t("capture","switches");
x.t("capture","near");
x.t("capture","agents");
x.t("capture","traffic");
x.t("capture","directly");
x.t("capture","processes");
x.t("capture","end");
x.t("capture","lan-side");
x.t("capture","process");
x.t("capture","manager");
x.t("capture","agent");
x.t("capture","applications");
x.t("capture","lan");
x.t("need","capture");
x.t("need","install");
x.t("need","additional");
x.t("agent/sniffer/analyzer","nearby");
x.t("11-9","capturing");
x.t("11-9","connect");
x.t("list","specifies");
x.t("complete","patent");
x.t("complete","steps");
x.t("guide","wan");
x.t("wan","shown");
x.t("wan","traffic");
x.t("wan","accelerators");
x.t("wan","lan");
x.t("hubs","provide");
x.t("network","location");
x.t("agents","capture");
x.t("agents","end");
x.t("filter","capture");
x.t("traffic","wan-accelerated");
x.t("traffic","capture");
x.t("traffic","filter");
x.t("traffic","directly");
x.t("traffic","especially");
x.t("traffic","accelerator");
x.t("traffic","client");
x.t("traffic","apptransaction");
x.t("traffic","note");
x.t("traffic","relevant");
x.t("traffic","server");
x.t("mirror","port");
x.t("directly","capture");
x.t("directly","device");
x.t("directly","accelerator");
x.t("directly","accelerators");
x.t("directly","lan");
x.t("true","application");
x.t("obtain","permission");
x.t("resulting","packet");
x.t("gateway","wan");
x.t("direct","captures");
x.t("perform","indirect");
x.t("perform","following");
x.t("going","accelerator");
x.t("filtering","irrelevant");
x.t("sends","traffic");
x.t("device","capturing");
x.t("device","figure");
x.t("device","following");
x.t("concept","always");
x.t("patent","notice");
x.t("nearby","host");
x.t("legal","notices");
x.t("notice","legal");
x.t("install","capture");
x.t("install","nearby");
x.t("install","apptransaction");
x.t("especially","important");
x.t("intermediate","hosts");
x.t("accelerator","set");
x.t("accelerator","want");
x.t("accelerator","need");
x.t("accelerator","wan");
x.t("accelerator","gateway");
x.t("accelerator","router");
x.t("side","complete");
x.t("side","lan");
x.t("approach","note");
x.t("cables","hubs");
x.t("2013","riverbed");
x.t("cannot","capture");
x.t("cannot","obtain");
x.t("indirect-capture","approach");
x.t("tiers","key");
x.t("tiers","capture");
x.t("tiers","step");
x.t("tiers","hosts");
x.t("workflow","descriptions");
x.t("workflow","performing");
x.t("processes","set");
x.t("specifies","agents");
x.t("software","may");
x.t("may","covered");
x.t("step","required");
x.t("section","riverbed");
x.t("initial","set-up");
x.t("set-up","process");
x.t("switch","need");
x.t("switch","capture");
x.t("switch","install");
x.t("switch","accelerator");
x.t("interest","includes");
x.t("accessible","switch");
x.t("important","intermediate");
x.t("end","tiers");
x.t("end","tier");
x.t("steps","capture");
x.t("steps","install");
x.t("steps","outline");
x.t("client","side");
x.t("environment","indirect");
x.t("lan-side","traffic");
x.t("lan-side","tiers");
x.t("performing","indirect");
x.t("option","install");
x.t("apptransaction","xpert");
x.t("longer","capturing");
x.t("technology","software");
x.t("additional","equipment");
x.t("hosts","set");
x.t("hosts","otherwise");
x.t("figure","11-7");
x.t("figure","11-8");
x.t("figure","11-9");
x.t("figure","figure");
x.t("acceleration","device");
x.t("process","network");
x.t("process","longer");
x.t("manager","create");
x.t("manager","information");
x.t("import","resulting");
x.t("tier","within");
x.t("location","accelerator");
x.t("host","mirror");
x.t("host","accessible");
x.t("host","connect");
x.t("host","using");
x.t("router/switch","mirror");
x.t("router/switch","figure");
x.t("configure","traffic");
x.t("information","capturing");
x.t("xpert","capturing");
x.t("xpert","home");
x.t("xpert","capture");
x.t("agent","captures");
x.t("agent","type");
x.t("agent","list");
x.t("agent","perform");
x.t("agent","nearby");
x.t("agent","acceleration");
x.t("agent","host");
x.t("application","traffic");
x.t("application","interest");
x.t("permission","capture");
x.t("described","direct");
x.t("port","available");
x.t("port","device");
x.t("port","switch");
x.t("port","router/switch");
x.t("note","filtering");
x.t("note","following");
x.t("otherwise","agents");
x.t("connectivity","capture");
x.t("applications","import");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("accelerators","capturing");
x.t("accelerators","user");
x.t("accelerators","indirect");
x.t("accelerators","perform");
x.t("accelerators","indirect-capture");
x.t("accelerators","described");
x.t("irrelevant","traffic");
x.t("irrelevant","router/switch");
x.t("packet","traces");
x.t("following","initial");
x.t("following","steps");
x.t("following","figure");
x.t("following","conditions");
x.t("router","sends");
x.t("router","switch");
x.t("relevant","traffic");
x.t("relevant","irrelevant");
x.t("connect","host");
x.t("using","apptransaction");
x.t("equipment","cables");
x.t("without","going");
x.t("outline","workflow");
x.t("covered","u.s");
x.t("conditions","true");
x.t("lan","wan");
x.t("lan","switch");
x.t("lan","following");
x.t("lan","without");
x.t("server","side");
x.t("patents","complete");
}
