function FileData_Pairs(x)
{
x.t("complex","application");
x.t("supports","keyword");
x.t("equal","sign");
x.t("example","syntax");
x.t("creation","logic");
x.t("properties","message_stage");
x.t("properties","used");
x.t("method","supports");
x.t("method","self.invoke_child_task");
x.t("method","call");
x.t("method","using");
x.t("defines","several");
x.t("modeling","complex");
x.t("lists","classes");
x.t("full","description");
x.t("files","created");
x.t("create","logic");
x.t("create","process");
x.t("create","modify");
x.t("table","lists");
x.t("table","26-3");
x.t("description","table");
x.t("description","application_base");
x.t("built-in","support");
x.t("required","arguments");
x.t("home","back");
x.t("summary","class");
x.t("ability","create");
x.t("ability","write");
x.t("action","located");
x.t("arguments","look");
x.t("arguments","need");
x.t("arguments","changed");
x.t("arguments","methods");
x.t("arguments","python");
x.t("arguments","appear");
x.t("arguments","include");
x.t("arguments","noted");
x.t("arguments","call");
x.t("skips","fourth");
x.t("u.s","patents");
x.t("user","guide");
x.t("creates","aps");
x.t("scripts","cannot");
x.t("scripts","transaction");
x.t("scripts","following");
x.t("set","classes");
x.t("shows","class");
x.t("last","argument");
x.t("interface","(api)");
x.t("support","creation");
x.t("support","center");
x.t("support","enumerated");
x.t("support","keyword");
x.t("leave","unneeded");
x.t("look","follows");
x.t("notices","section");
x.t("application_base","class");
x.t("hierarchy","figure");
x.t("hierarchy","following");
x.t("suspended","child");
x.t("vector","statistics");
x.t("editing","designing");
x.t("connection","class");
x.t("followed","equal");
x.t("apis","user");
x.t("apis","transaction");
x.t("automatically","creates");
x.t("needed","stat");
x.t("needed","logic");
x.t("tier_map","call");
x.t("back","top");
x.t("objects","needed");
x.t("link","full");
x.t("access","suspended");
x.t("access","network");
x.t("access","control");
x.t("access","message");
x.t("includes","last");
x.t("includes","three");
x.t("top","2013");
x.t("status","message");
x.t("need","leave");
x.t("web_client","server");
x.t("actions","messages");
x.t("actions","resumed");
x.t("during","simulation");
x.t("self.invoke_child_task","parent_action=action");
x.t("self.invoke_child_task","parent_action");
x.t("complete","patent");
x.t("guide","editing");
x.t("api","support");
x.t("api","comprises");
x.t("api","several");
x.t("api","contained");
x.t("network","model");
x.t("directly","instantiate");
x.t("stat","class");
x.t("obtain","information");
x.t("name","followed");
x.t("tasks","classes");
x.t("enumerator","class");
x.t("enumerated","data");
x.t("follows","call");
x.t("changed","order");
x.t("parent_action=action","is_blocking=true");
x.t("base","class");
x.t("custom","vector");
x.t("argument","includes");
x.t("argument","name");
x.t("argument","tiers");
x.t("argument","value");
x.t("parent_action","task_name");
x.t("methods","properties");
x.t("methods","method");
x.t("methods","home");
x.t("methods","support");
x.t("methods","api");
x.t("provides","ability");
x.t("provides","link");
x.t("provides","access");
x.t("whiteboard","modeling");
x.t("whiteboard","automatically");
x.t("whiteboard","scripting");
x.t("whiteboard","models");
x.t("server_job","class");
x.t("constants","represent");
x.t("sign","argument");
x.t("tier_map=tiers","several");
x.t("allows","optional");
x.t("scripting","apis");
x.t("scripting","api");
x.t("scripting","application");
x.t("write","custom");
x.t("aps","objects");
x.t("aps","module");
x.t("aps","transaction");
x.t("aps","classes");
x.t("defining","constants");
x.t("contain","attributes");
x.t("unneeded","ones");
x.t("three","required");
x.t("patent","notice");
x.t("stat_type","class");
x.t("ones","keyword");
x.t("legal","notices");
x.t("logic","scripts");
x.t("registered","note");
x.t("python","built-in");
x.t("python","allows");
x.t("supported","classes");
x.t("notice","legal");
x.t("syntax","section");
x.t("syntax","invoke_child_task");
x.t("executing","task");
x.t("messages","dependencies");
x.t("is_blocking","task_params");
x.t("number","classes");
x.t("control","connections");
x.t("stat_collect_mode","class");
x.t("is_blocking=true","task_name=");
x.t("2013","riverbed");
x.t("cannot","directly");
x.t("user-defined","classes");
x.t("tiers","client");
x.t("tiers","resumable_point");
x.t("software","may");
x.t("may","covered");
x.t("26-3","aps");
x.t("message_stage","class");
x.t("types","supported");
x.t("keyword","arguments");
x.t("section","methods");
x.t("section","riverbed");
x.t("26-5","aps");
x.t("node","class");
x.t("assigned","tiers");
x.t("scope","statistic");
x.t("task","create");
x.t("client","web_client");
x.t("designing","applications");
x.t("instantiate","aps");
x.t("located","message_status");
x.t("statistic","registered");
x.t("comprises","number");
x.t("message","properties");
x.t("message","action");
x.t("message","node");
x.t("message","class");
x.t("appear","order");
x.t("task_params","tier_map");
x.t("report_server","self.invoke_child_task");
x.t("(api)","set");
x.t("collected","stat_type");
x.t("(optional)","argument");
x.t("include","argument");
x.t("fourth","(optional)");
x.t("technology","software");
x.t("named","aps");
x.t("resumable_point","class");
x.t("value","method");
x.t("several","methods");
x.t("several","classes");
x.t("figure","shows");
x.t("figure","26-5");
x.t("programming","interface");
x.t("connections","server_job");
x.t("process","jobs");
x.t("models","api");
x.t("represent","status");
x.t("represent","scope");
x.t("represent","message");
x.t("represent","statistics");
x.t("task_name=","child_task_2821.aed.m");
x.t("nodes","assigned");
x.t("resumed","needed");
x.t("information","executing");
x.t("module","defines");
x.t("module","named");
x.t("module","class");
x.t("data","files");
x.t("data","types");
x.t("optional","keyword");
x.t("noted","syntax");
x.t("application","programming");
x.t("application","behavior");
x.t("invoke_child_task","method");
x.t("child_task_2821.aed.m","tier_map=tiers");
x.t("transaction","whiteboard");
x.t("classes","connection");
x.t("classes","methods");
x.t("classes","provides");
x.t("classes","aps");
x.t("classes","contain");
x.t("classes","keyword");
x.t("classes","transaction");
x.t("classes","classes");
x.t("classes","used");
x.t("jobs","message");
x.t("note","python");
x.t("applications","transaction");
x.t("task_name","is_blocking");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("created","during");
x.t("call","method");
x.t("call","arguments");
x.t("call","includes");
x.t("call","keyword");
x.t("order","example");
x.t("order","skips");
x.t("used","create");
x.t("used","obtain");
x.t("manage","child");
x.t("contained","module");
x.t("following","table");
x.t("following","figure");
x.t("model","nodes");
x.t("simulation","stat_collect_mode");
x.t("class","description");
x.t("class","summary");
x.t("class","hierarchy");
x.t("class","enumerator");
x.t("class","base");
x.t("class","provides");
x.t("class","defining");
x.t("class","user-defined");
x.t("using","keyword");
x.t("dependencies","manage");
x.t("statistics","collected");
x.t("statistics","data");
x.t("behavior","logic");
x.t("modify","actions");
x.t("child","actions");
x.t("child","tasks");
x.t("message_status","class");
x.t("covered","u.s");
x.t("attributes","api");
x.t("server","report_server");
x.t("patents","complete");
}
