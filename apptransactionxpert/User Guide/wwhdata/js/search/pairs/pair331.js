function FileData_Pairs(x)
{
x.t("create_message","create_message");
x.t("create_message","user");
x.t("create_message","abstract");
x.t("complex","application");
x.t("supports","keyword");
x.t("example","new_msg");
x.t("method","supports");
x.t("method","creates");
x.t("properties","tier_delay");
x.t("terminating","logical");
x.t("modeling","complex");
x.t("5.0","new_msg.tier_delay");
x.t("description","size");
x.t("new_msg.tier_delay","0.001");
x.t("create","children");
x.t("callback","register_receipt_callback");
x.t("callback","function");
x.t("callback","triggered");
x.t("callback","scheduled");
x.t("home","back");
x.t("action","action");
x.t("action","default");
x.t("action","argument");
x.t("action","aps.message_stage.end");
x.t("action","parent_stage");
x.t("action","message");
x.t("action","designate");
x.t("action","object");
x.t("arguments","return");
x.t("u.s","patents");
x.t("user","guide");
x.t("creates","message");
x.t("current","action");
x.t("4096","client");
x.t("scripts","application_base");
x.t("schedules","sent");
x.t("pair","used");
x.t("set","parent_action");
x.t("set","dependencies");
x.t("register","receipt");
x.t("notices","section");
x.t("support","center");
x.t("application_base","syntax");
x.t("application_base","class");
x.t("type","description");
x.t("type","message");
x.t("editing","designing");
x.t("self.create_message","4096");
x.t("self.create_message","size");
x.t("connection","connection");
x.t("connection","parent");
x.t("connection","index");
x.t("connection","message");
x.t("connection","tier");
x.t("connection","object");
x.t("default","connection");
x.t("default","message");
x.t("back","top");
x.t("details","method");
x.t("size","src_tier");
x.t("size","message");
x.t("size","integer");
x.t("top","2013");
x.t("complete","patent");
x.t("guide","editing");
x.t("new_msg.user_delay","5.0");
x.t("defaults","current");
x.t("defaults","aps.message_stage");
x.t("specified","default");
x.t("receipt","callback");
x.t("receipt","details");
x.t("receipt","timeout");
x.t("desired","parent");
x.t("register_receipt_callback","register_timeout_callback");
x.t("name","terminating");
x.t("name","originating");
x.t("src_tier","string");
x.t("src_tier","dest_tier");
x.t("argument","callback");
x.t("argument","type");
x.t("bytes","src_tier");
x.t("parent_action","action");
x.t("parent_action","current");
x.t("parent_action","desired");
x.t("dependent","message");
x.t("whiteboard","modeling");
x.t("makes","explicit");
x.t("tier_delay","user_delay");
x.t("string","name");
x.t("new_msg","self.create_message");
x.t("new_msg","self.sim_message");
x.t("patent","notice");
x.t("legal","notices");
x.t("logic","scripts");
x.t("logic","script");
x.t("notice","legal");
x.t("syntax","self.create_message");
x.t("logical","tier");
x.t("respectively","home");
x.t("messages","created");
x.t("parent","action");
x.t("parent","message");
x.t("function","makes");
x.t("function","parent");
x.t("function","message");
x.t("2013","riverbed");
x.t("aps.message_stage.end","new_msg.user_delay");
x.t("software","may");
x.t("may","covered");
x.t("index","connection");
x.t("parent_stage","integer");
x.t("keyword","arguments");
x.t("returned","message");
x.t("returned","dependencies");
x.t("section","riverbed");
x.t("aps.message_stage","end");
x.t("explicit","connection");
x.t("end","connection");
x.t("client","server");
x.t("designing","applications");
x.t("abstract","creates");
x.t("parent_action=none","parent_stage=aps.message_stage.end");
x.t("stage","parent");
x.t("return","type");
x.t("message","schedules");
x.t("message","set");
x.t("message","register");
x.t("message","receipt");
x.t("message","bytes");
x.t("message","dependent");
x.t("message","messages");
x.t("message","parent");
x.t("message","returned");
x.t("message","message");
x.t("message","optional");
x.t("message","created");
x.t("message","class");
x.t("message","sent");
x.t("message","object");
x.t("triggered","message");
x.t("given","logic");
x.t("user_delay","set");
x.t("technology","software");
x.t("self.sim_message","callback");
x.t("delays","message");
x.t("originating","logical");
x.t("register_timeout_callback","respectively");
x.t("tier","pair");
x.t("tier","parent_action");
x.t("tier","dest_tier");
x.t("self.register_receipt_callback","new_msg");
x.t("parent_stage=aps.message_stage.end","connection=");
x.t("script","callback");
x.t("script","finishes");
x.t("optional","defaults");
x.t("optional","specified");
x.t("dest_tier","string");
x.t("dest_tier","parent_action=none");
x.t("timeout","callback");
x.t("application","behavior");
x.t("children","message");
x.t("transaction","whiteboard");
x.t("integer","connection");
x.t("integer","size");
x.t("integer","stage");
x.t("applications","transaction");
x.t("0.001","self.register_receipt_callback");
x.t("riverbed","support");
x.t("riverbed","technology");
x.t("created","example");
x.t("created","given");
x.t("created","message");
x.t("connection=","argument");
x.t("used","method");
x.t("finishes","message");
x.t("scheduled","function");
x.t("class","create_message");
x.t("class","properties");
x.t("class","application_base");
x.t("dependencies","message");
x.t("dependencies","delays");
x.t("behavior","logic");
x.t("designate","parent");
x.t("covered","u.s");
x.t("sent","parent_action");
x.t("sent","logic");
x.t("sent","message");
x.t("sent","optional");
x.t("sent","class");
x.t("object","create");
x.t("object","action");
x.t("object","schedules");
x.t("object","integer");
x.t("server","action");
x.t("patents","complete");
}
